{
    "openapi": "3.0.0",
    "info": {
        "title": "Embawood API Documentation",
        "version": "1.0.0"
    },
    "paths": {
        "/api/get-profile-summary": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Retrieve the profile summary for the authenticated user",
                "description": "Returns a summary of the authenticated user's profile, including full name, bonus amount, number of favorites, and order counts by status.",
                "operationId": "getUserProfileSummary",
                "responses": {
                    "200": {
                        "description": "Profile summary retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Operation status",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "description": "User profile data",
                                            "properties": {
                                                "fullname": {
                                                    "description": "User's full name",
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "bonus_amount": {
                                                    "description": "Remaining bonus amount",
                                                    "type": "integer",
                                                    "example": 150
                                                },
                                                "favorites_count": {
                                                    "description": "Number of favorite products",
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "order_counts": {
                                                    "description": "Counts of orders by status",
                                                    "properties": {
                                                        "pending": {
                                                            "description": "Count of pending orders",
                                                            "type": "integer",
                                                            "example": 2
                                                        },
                                                        "preparing": {
                                                            "description": "Count of preparing orders",
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "shipping": {
                                                            "description": "Count of shipping orders",
                                                            "type": "integer",
                                                            "example": 0
                                                        },
                                                        "delivered": {
                                                            "description": "Count of delivered orders",
                                                            "type": "integer",
                                                            "example": 7
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "description": "Response message",
                                            "type": "string",
                                            "example": "User details retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Operation status",
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "User not authenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error occurred while retrieving user details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Operation status",
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "An error occurred while retrieving user details"
                                        },
                                        "error": {
                                            "description": "Detailed error message",
                                            "type": "string",
                                            "example": "SQLSTATE[42S22]: Column not found: 1054 Unknown column..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/delivery-addresses": {
            "get": {
                "tags": [
                    "Delivery Addresses"
                ],
                "summary": "Retrieve all delivery addresses for the authenticated user",
                "description": "Returns a list of all delivery addresses associated with the authenticated user.",
                "operationId": "getUserDeliveryAddresses",
                "responses": {
                    "200": {
                        "description": "List of delivery addresses",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "description": "Address ID",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "fullname": {
                                                "description": "Full name associated with the address",
                                                "type": "string",
                                                "example": "John Doe"
                                            },
                                            "phone": {
                                                "description": "Phone number",
                                                "type": "string",
                                                "example": "+123456789"
                                            },
                                            "address_line1": {
                                                "description": "Primary address line",
                                                "type": "string",
                                                "example": "123 Main Street"
                                            },
                                            "address_line2": {
                                                "description": "Secondary address line",
                                                "type": "string",
                                                "example": "Apt 4B",
                                                "nullable": true
                                            },
                                            "city": {
                                                "description": "City",
                                                "type": "string",
                                                "example": "New York"
                                            },
                                            "is_default": {
                                                "description": "Indicates if this is the default address",
                                                "type": "boolean",
                                                "example": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Delivery Addresses"
                ],
                "summary": "Create a new delivery address",
                "description": "Allows the authenticated user to create a new delivery address. If `is_default` is true, this address will be set as the default.",
                "operationId": "storeUserDeliveryAddress",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "fullname": {
                                        "description": "Full name",
                                        "type": "string",
                                        "example": "Jane Doe"
                                    },
                                    "phone": {
                                        "description": "Phone number",
                                        "type": "string",
                                        "example": "+123456789"
                                    },
                                    "address_line1": {
                                        "description": "Primary address line",
                                        "type": "string",
                                        "example": "456 Elm Street"
                                    },
                                    "address_line2": {
                                        "description": "Secondary address line",
                                        "type": "string",
                                        "example": "Suite 101",
                                        "nullable": true
                                    },
                                    "city": {
                                        "description": "City",
                                        "type": "string",
                                        "example": "Los Angeles"
                                    },
                                    "is_default": {
                                        "description": "Indicates if this should be the default address",
                                        "type": "boolean",
                                        "example": true,
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Address created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "description": "Address ID",
                                            "type": "integer",
                                            "example": 2
                                        },
                                        "fullname": {
                                            "description": "Full name",
                                            "type": "string",
                                            "example": "Jane Doe"
                                        },
                                        "phone": {
                                            "description": "Phone number",
                                            "type": "string",
                                            "example": "+123456789"
                                        },
                                        "address_line1": {
                                            "description": "Primary address line",
                                            "type": "string",
                                            "example": "456 Elm Street"
                                        },
                                        "address_line2": {
                                            "description": "Secondary address line",
                                            "type": "string",
                                            "example": "Suite 101",
                                            "nullable": true
                                        },
                                        "city": {
                                            "description": "City",
                                            "type": "string",
                                            "example": "Los Angeles"
                                        },
                                        "is_default": {
                                            "description": "Indicates if this is the default address",
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/delivery-addresses/{id}": {
            "put": {
                "tags": [
                    "Delivery Addresses"
                ],
                "summary": "Update an existing delivery address",
                "description": "Allows the authenticated user to update an existing delivery address. If `is_default` is true, this address will be set as the default.",
                "operationId": "updateUserDeliveryAddress",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the delivery address to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "fullname": {
                                        "description": "Full name",
                                        "type": "string",
                                        "example": "Jane Doe"
                                    },
                                    "phone": {
                                        "description": "Phone number",
                                        "type": "string",
                                        "example": "+123456789"
                                    },
                                    "address_line1": {
                                        "description": "Primary address line",
                                        "type": "string",
                                        "example": "789 Maple Ave"
                                    },
                                    "address_line2": {
                                        "description": "Secondary address line",
                                        "type": "string",
                                        "example": "Suite 303",
                                        "nullable": true
                                    },
                                    "city": {
                                        "description": "City",
                                        "type": "string",
                                        "example": "San Francisco"
                                    },
                                    "is_default": {
                                        "description": "Indicates if this should be the default address",
                                        "type": "boolean",
                                        "example": true,
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Address updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "description": "Address ID",
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "fullname": {
                                            "description": "Full name",
                                            "type": "string",
                                            "example": "Jane Doe"
                                        },
                                        "phone": {
                                            "description": "Phone number",
                                            "type": "string",
                                            "example": "+123456789"
                                        },
                                        "address_line1": {
                                            "description": "Primary address line",
                                            "type": "string",
                                            "example": "789 Maple Ave"
                                        },
                                        "address_line2": {
                                            "description": "Secondary address line",
                                            "type": "string",
                                            "example": "Suite 303",
                                            "nullable": true
                                        },
                                        "city": {
                                            "description": "City",
                                            "type": "string",
                                            "example": "San Francisco"
                                        },
                                        "is_default": {
                                            "description": "Indicates if this is the default address",
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Address not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Address not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Delivery Addresses"
                ],
                "summary": "Delete a delivery address",
                "description": "Allows the authenticated user to delete an existing delivery address.",
                "operationId": "deleteUserDeliveryAddress",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the delivery address to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Address deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Success message",
                                            "type": "string",
                                            "example": "Address deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Address not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Address not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/delivery-addresses/select": {
            "post": {
                "tags": [
                    "Delivery Addresses"
                ],
                "summary": "Mark a delivery address as default",
                "description": "Allows the authenticated user to mark a specific delivery address as the default.",
                "operationId": "makeAddressDefault",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "description": "ID of the delivery address to mark as default",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Address marked as default successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Success message",
                                            "type": "string",
                                            "example": "Address selected as default"
                                        },
                                        "address": {
                                            "description": "Updated default address",
                                            "properties": {
                                                "id": {
                                                    "description": "Address ID",
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "fullname": {
                                                    "description": "Full name",
                                                    "type": "string",
                                                    "example": "Jane Doe"
                                                },
                                                "phone": {
                                                    "description": "Phone number",
                                                    "type": "string",
                                                    "example": "+123456789"
                                                },
                                                "address_line1": {
                                                    "description": "Primary address line",
                                                    "type": "string",
                                                    "example": "123 Main St"
                                                },
                                                "address_line2": {
                                                    "description": "Secondary address line",
                                                    "type": "string",
                                                    "example": "Suite 101",
                                                    "nullable": true
                                                },
                                                "city": {
                                                    "description": "City",
                                                    "type": "string",
                                                    "example": "New York"
                                                },
                                                "is_default": {
                                                    "description": "Indicates if this is the default address",
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Address not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Address not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/basket/add-product": {
            "post": {
                "tags": [
                    "Basket"
                ],
                "summary": "Add a product to the basket",
                "description": "Adds a product or a set to the user's basket based on the product type. Returns the updated basket data.",
                "operationId": "addProductToBasket",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "product_id": {
                                        "description": "ID of the product to add",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "quantity": {
                                        "description": "Quantity of the product",
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product successfully added to the basket",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Success message",
                                            "type": "string",
                                            "example": "Product added to basket"
                                        },
                                        "basket": {
                                            "description": "Updated basket data",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid quantity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Quantity must be greater than zero"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Product not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/basket/update-product-quantity": {
            "post": {
                "tags": [
                    "Basket"
                ],
                "summary": "Update the quantity of a product in the basket",
                "description": "Updates the quantity of a specific product in the user's basket. If the quantity is set to 0, the product is removed from the basket.",
                "operationId": "updateProductQuantity",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "basket_item_id": {
                                        "description": "ID of the basket item to update",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "quantity": {
                                        "description": "New quantity for the product. If set to 0, the product will be removed.",
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Quantity updated successfully or product removed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Operation status",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "description": "Response message",
                                            "type": "string",
                                            "example": "Quantity updated"
                                        },
                                        "basket": {
                                            "description": "Updated basket data",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid quantity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Operation status",
                                            "type": "string",
                                            "example": "failure"
                                        },
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Quantity cannot be negative"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found in basket",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Operation status",
                                            "type": "string",
                                            "example": "failure"
                                        },
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Product not found in basket"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/basket/increase-product-quantity": {
            "post": {
                "tags": [
                    "Basket"
                ],
                "summary": "Increase the quantity of a product in the basket",
                "description": "Increases the quantity of a specific product in the user's basket by 1. Returns the updated basket data.",
                "operationId": "increaseProductQuantity",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "basket_item_id": {
                                        "description": "ID of the basket item to update",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Quantity increased successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Operation status",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "description": "Response message",
                                            "type": "string",
                                            "example": "Quantity increased"
                                        },
                                        "basket": {
                                            "description": "Updated basket data",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found in basket",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Operation status",
                                            "type": "string",
                                            "example": "failure"
                                        },
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Product not found in basket"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/basket/decrease-product-quantity": {
            "post": {
                "tags": [
                    "Basket"
                ],
                "summary": "Decrease the quantity of a product in the basket",
                "description": "Decreases the quantity of a specific product in the user's basket by 1, provided the quantity is greater than 1. Returns the updated basket data.",
                "operationId": "decreaseProductQuantity",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "basket_item_id": {
                                        "description": "ID of the basket item to update",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Quantity decreased successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Operation status",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "description": "Response message",
                                            "type": "string",
                                            "example": "Quantity decreased"
                                        },
                                        "basket": {
                                            "description": "Updated basket data",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found in basket",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Operation status",
                                            "type": "string",
                                            "example": "failure"
                                        },
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Product not found in basket"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/basket/remove-product": {
            "post": {
                "tags": [
                    "Basket"
                ],
                "summary": "Remove a product from the basket",
                "description": "Removes a specific product from the user's basket. Returns the updated basket data upon success.",
                "operationId": "removeProductFromBasket",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "basket_item_id": {
                                        "description": "ID of the basket item to remove",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product removed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Operation status",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "description": "Response message",
                                            "type": "string",
                                            "example": "Product removed from basket"
                                        },
                                        "basket": {
                                            "description": "Updated basket data",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found in basket",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Operation status",
                                            "type": "string",
                                            "example": "failure"
                                        },
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Product not found in basket"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "api/basket/attach-coupon": {
            "post": {
                "tags": [
                    "Basket"
                ],
                "summary": "Attach a coupon to the user's basket",
                "description": "Validates and attaches a coupon to the user's basket if the requirements are met. Returns the updated basket data.",
                "operationId": "attachCouponToBasket",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "coupon_code": {
                                        "description": "The code of the coupon to attach",
                                        "type": "string",
                                        "example": "DISCOUNT10"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Coupon attachment response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Operation status",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "description": "Response message",
                                            "type": "string",
                                            "example": "Coupon applied"
                                        },
                                        "basket": {
                                            "description": "Updated basket data",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/basket/detach-coupon": {
            "post": {
                "tags": [
                    "Basket"
                ],
                "summary": "Detach a coupon from the user's basket",
                "description": "Detaches a specific coupon from the user's basket and returns the updated basket data.",
                "operationId": "detachCouponFromBasket",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "coupon_code": {
                                        "description": "The code of the coupon to detach",
                                        "type": "string",
                                        "example": "DISCOUNT10"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Coupon detached successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Operation status",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "description": "Response message",
                                            "type": "string",
                                            "example": "Coupon detached"
                                        },
                                        "basket": {
                                            "description": "Updated basket data",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/basket": {
            "get": {
                "tags": [
                    "Basket"
                ],
                "summary": "Retrieve the current user's basket",
                "description": "Returns the details of the user's basket, including products, sets, discounts, and any applied coupons.",
                "operationId": "getBasket",
                "responses": {
                    "200": {
                        "description": "Basket retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Operation status",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "is_empty": {
                                            "description": "Indicates if the basket is empty",
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "description": "Message indicating the basket status",
                                            "type": "string",
                                            "example": "Basket retrieved successfully"
                                        },
                                        "total_items": {
                                            "description": "Total number of items in the basket",
                                            "type": "integer",
                                            "example": 3
                                        },
                                        "basket": {
                                            "description": "Detailed basket data",
                                            "properties": {
                                                "total": {
                                                    "description": "Total price of items before discounts",
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 200.5
                                                },
                                                "final_total": {
                                                    "description": "Total price after applying discounts",
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 180
                                                },
                                                "product_discount_amount": {
                                                    "description": "Total discount amount from products",
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 15
                                                },
                                                "coupon_discount_amount": {
                                                    "description": "Total discount amount from coupons",
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 5.5
                                                },
                                                "safety_information": {
                                                    "description": "List of safety information notices",
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "description": "ID of the safety notice",
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "title": {
                                                                "description": "Title of the safety notice",
                                                                "type": "string",
                                                                "example": "Fire Safety"
                                                            },
                                                            "description": {
                                                                "description": "Description of the safety notice",
                                                                "type": "string",
                                                                "example": "Keep flammable items away."
                                                            },
                                                            "icon": {
                                                                "description": "Icon URL for the safety notice",
                                                                "type": "string",
                                                                "example": "https://example.com/icon.png"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "products": {
                                                    "description": "List of individual products in the basket",
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "basket_item_id": {
                                                                "description": "ID of the basket item",
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "quantity": {
                                                                "description": "Quantity of the product",
                                                                "type": "integer",
                                                                "example": 2
                                                            },
                                                            "item_product_id": {
                                                                "description": "ID of the product",
                                                                "type": "integer",
                                                                "example": 101
                                                            },
                                                            "name": {
                                                                "description": "Name of the product",
                                                                "type": "string",
                                                                "example": "Wooden Chair"
                                                            },
                                                            "price": {
                                                                "description": "Price of the product",
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 100
                                                            },
                                                            "final_price": {
                                                                "description": "Final price after discounts",
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 90
                                                            },
                                                            "main_image": {
                                                                "description": "URL of the product's main image",
                                                                "type": "string",
                                                                "example": "https://example.com/product.png"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "sets": {
                                                    "description": "List of sets in the basket",
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "basket_item_id": {
                                                                "description": "ID of the basket item",
                                                                "type": "integer",
                                                                "example": 2
                                                            },
                                                            "parent_basket_item_id": {
                                                                "description": "ID of the parent basket item if applicable",
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "quantity": {
                                                                "description": "Quantity of the set",
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "description": "Name of the set",
                                                                "type": "string",
                                                                "example": "Living Room Set"
                                                            },
                                                            "basket_price": {
                                                                "description": "Total price of the set before discounts",
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 300
                                                            },
                                                            "basket_final_price": {
                                                                "description": "Total price of the set after discounts",
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 270
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "applied_coupon": {
                                                    "description": "Code of the applied coupon, if any",
                                                    "type": "string",
                                                    "example": "DISCOUNT10",
                                                    "nullable": true
                                                },
                                                "coupon_valid": {
                                                    "description": "Indicates whether the applied coupon is valid",
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "coupon_error": {
                                                    "description": "Error message related to the coupon, if invalid",
                                                    "type": "string",
                                                    "example": null,
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/checkout": {
            "post": {
                "tags": [
                    "Checkout"
                ],
                "summary": "Perform the checkout process",
                "description": "Completes the checkout process for the user's basket, applying bonuses and coupons where applicable, and creates an order. Clears the user's basket upon successful checkout.",
                "operationId": "checkout",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "apply_bonus": {
                                        "description": "Indicates if the user's bonus should be applied to the checkout",
                                        "type": "boolean",
                                        "example": true,
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Checkout successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Success message",
                                            "type": "string",
                                            "example": "Checkout successful"
                                        },
                                        "order": {
                                            "description": "Order details",
                                            "properties": {
                                                "id": {
                                                    "description": "Order ID",
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "user_id": {
                                                    "description": "ID of the user who placed the order",
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "total": {
                                                    "description": "Total order amount before discounts",
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 150.5
                                                },
                                                "bonus_discount": {
                                                    "description": "Total discount from bonuses applied",
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 20
                                                },
                                                "coupon_discount": {
                                                    "description": "Total discount from coupons applied",
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 10
                                                },
                                                "item_discounts_total": {
                                                    "description": "Total discount from items",
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 15
                                                },
                                                "address": {
                                                    "description": "Delivery address for the order",
                                                    "type": "string",
                                                    "example": "John Doe, +123456789, 123 Main Street, Apt 4B, New York"
                                                },
                                                "status": {
                                                    "description": "Order status",
                                                    "type": "string",
                                                    "example": "pending"
                                                },
                                                "created_at": {
                                                    "description": "Timestamp when the order was created",
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": "2024-11-20T15:30:00Z"
                                                },
                                                "updated_at": {
                                                    "description": "Timestamp when the order was last updated",
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": "2024-11-20T15:35:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Basket is empty"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Checkout failed due to a server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Checkout failed"
                                        },
                                        "error": {
                                            "description": "Detailed error message",
                                            "type": "string",
                                            "example": "SQLSTATE[42S22]: Column not found: 1054 Unknown column..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/get-bonus-execution": {
            "get": {
                "tags": [
                    "Bonuses"
                ],
                "summary": "Retrieve bonus execution records for the authenticated user",
                "description": "Returns the latest bonus execution records for the authenticated user, including registration bonuses and other recent bonus actions.",
                "operationId": "getBonusExecution",
                "responses": {
                    "200": {
                        "description": "Bonus execution records retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "execution_records": {
                                            "description": "List of bonus execution records",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "title": {
                                                        "description": "Description of the bonus execution",
                                                        "type": "string",
                                                        "example": "Qeydiyyatdan keçildiyi üçün"
                                                    },
                                                    "amount": {
                                                        "description": "Amount of the bonus",
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 10.5
                                                    },
                                                    "date": {
                                                        "description": "Date when the bonus was executed",
                                                        "type": "string",
                                                        "format": "datetime",
                                                        "example": "20.11.2024 15:30:00"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "remaining_bonus_amount": {
                                            "description": "Total remaining bonus amount for the user",
                                            "type": "number",
                                            "format": "float",
                                            "example": 150
                                        },
                                        "used_bonus_amount": {
                                            "description": "Total used bonus amount for the user",
                                            "type": "number",
                                            "format": "float",
                                            "example": 50
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Operation status",
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "User not authenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error occurred while retrieving bonus execution records",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Operation status",
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "An error occurred while retrieving bonus execution records"
                                        },
                                        "error": {
                                            "description": "Detailed error message",
                                            "type": "string",
                                            "example": "SQLSTATE[42S22]: Column not found: 1054 Unknown column..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/earn-bonus-info": {
            "get": {
                "tags": [
                    "Bonuses"
                ],
                "summary": "Retrieve bonus earning information",
                "description": "Provides information about available bonuses for product views, registration, and orders, including current progress and bonus amounts.",
                "operationId": "getEarnBonusInfo",
                "responses": {
                    "200": {
                        "description": "Bonus earning information retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "product_view": {
                                            "description": "Details about the product view bonus",
                                            "properties": {
                                                "title": {
                                                    "description": "Title of the bonus",
                                                    "type": "string",
                                                    "example": "Earn bonus for viewing products"
                                                },
                                                "description": {
                                                    "description": "Description of the bonus",
                                                    "type": "string",
                                                    "example": "View products to earn bonuses."
                                                },
                                                "bonus_amount": {
                                                    "description": "Bonus amount for achieving the target",
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "product_view_target": {
                                                    "description": "Target product views to achieve the bonus",
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "current_view_count": {
                                                    "description": "Current number of views by the user",
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "bonus_achieved": {
                                                    "description": "Indicates if the user has achieved the bonus",
                                                    "type": "boolean",
                                                    "example": false
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "registration": {
                                            "description": "Details about the registration bonus",
                                            "properties": {
                                                "title": {
                                                    "description": "Title of the bonus",
                                                    "type": "string",
                                                    "example": "Registration Bonus"
                                                },
                                                "description": {
                                                    "description": "Description of the bonus",
                                                    "type": "string",
                                                    "example": "Earn bonus for registering in the app."
                                                },
                                                "bonus_amount": {
                                                    "description": "Bonus amount for registration",
                                                    "type": "integer",
                                                    "example": 20
                                                },
                                                "bonus_achieved": {
                                                    "description": "Indicates if the registration bonus has been achieved",
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "order": {
                                            "description": "Details about the order bonus",
                                            "properties": {
                                                "title": {
                                                    "description": "Title of the bonus",
                                                    "type": "string",
                                                    "example": "Order Bonus",
                                                    "nullable": true
                                                },
                                                "description": {
                                                    "description": "Description of the bonus",
                                                    "type": "string",
                                                    "example": "Earn bonus for placing orders.",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Operation status",
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "User not authenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/homescreen-categories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Retrieve categories for the home screen widget",
                "description": "Fetches categories marked as homescreen widgets with their details and images.",
                "operationId": "getHomescreenCategories",
                "responses": {
                    "200": {
                        "description": "Homescreen categories retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "description": "Category ID",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "slug": {
                                                "description": "Category slug",
                                                "type": "string",
                                                "example": "living-room"
                                            },
                                            "name": {
                                                "description": "Category name",
                                                "type": "string",
                                                "example": "Living Room"
                                            },
                                            "description": {
                                                "description": "Category description",
                                                "type": "string",
                                                "example": "Explore our living room furniture."
                                            },
                                            "banner_image": {
                                                "description": "URL of the banner image",
                                                "type": "string",
                                                "example": "http://example.com/storage/images/category/banner/banner.jpg"
                                            },
                                            "widget_view_image": {
                                                "description": "URL of the widget view image",
                                                "type": "string",
                                                "example": "http://example.com/storage/images/category/widget_images/widget.jpg"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/categories-with-subcategories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Retrieve all categories with their subcategories",
                "description": "Fetches all categories along with their subcategories and associated images.",
                "operationId": "getCategoriesWithSubcategories",
                "responses": {
                    "200": {
                        "description": "Categories with subcategories retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Response status",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "categories": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "description": "Category ID",
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "slug": {
                                                        "description": "Category slug",
                                                        "type": "string",
                                                        "example": "living-room"
                                                    },
                                                    "name": {
                                                        "description": "Category name",
                                                        "type": "string",
                                                        "example": "Living Room"
                                                    },
                                                    "banner_image": {
                                                        "description": "URL of the banner image",
                                                        "type": "string",
                                                        "example": "http://example.com/storage/images/category/banner/banner.jpg"
                                                    },
                                                    "subcategories": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "id": {
                                                                    "description": "Subcategory ID",
                                                                    "type": "integer",
                                                                    "example": 10
                                                                },
                                                                "slug": {
                                                                    "description": "Subcategory slug",
                                                                    "type": "string",
                                                                    "example": "sofas"
                                                                },
                                                                "name": {
                                                                    "description": "Subcategory name",
                                                                    "type": "string",
                                                                    "example": "Sofas"
                                                                },
                                                                "image": {
                                                                    "description": "URL of the subcategory image",
                                                                    "type": "string",
                                                                    "example": "http://example.com/storage/images/subcategories/small/sofas.jpg"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "ideas": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "description": "Idea ID",
                                                        "type": "integer",
                                                        "example": 100
                                                    },
                                                    "name": {
                                                        "description": "Idea title",
                                                        "type": "string",
                                                        "example": "Cozy Living Room Ideas"
                                                    },
                                                    "subideas": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "id": {
                                                                    "description": "Subidea ID",
                                                                    "type": "integer",
                                                                    "example": 101
                                                                },
                                                                "name": {
                                                                    "description": "Subidea title",
                                                                    "type": "string",
                                                                    "example": "Modern Sofa Arrangement"
                                                                },
                                                                "image": {
                                                                    "description": "URL of the subidea image",
                                                                    "type": "string",
                                                                    "example": "http://example.com/storage/images/ideas/subidea.jpg"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/category-details/{id}": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Retrieve details of a specific category by ID",
                "description": "Fetches category details along with its subcategories and products.",
                "operationId": "getCategoryDetails",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "slug": {
                                            "description": "Category slug",
                                            "type": "string",
                                            "example": "living-room"
                                        },
                                        "name": {
                                            "description": "Category name",
                                            "type": "string",
                                            "example": "Living Room"
                                        },
                                        "description": {
                                            "description": "Category description",
                                            "type": "string",
                                            "example": "Explore our living room furniture."
                                        },
                                        "meta_title": {
                                            "description": "Meta title for SEO",
                                            "type": "string",
                                            "example": "Living Room Furniture"
                                        },
                                        "meta_description": {
                                            "description": "Meta description for SEO",
                                            "type": "string",
                                            "example": "Discover premium furniture for your living room."
                                        },
                                        "description_web": {
                                            "description": "Detailed web description",
                                            "type": "string",
                                            "example": "A wide selection of living room furniture for all tastes."
                                        },
                                        "banner_image": {
                                            "description": "URL of the banner image",
                                            "type": "string",
                                            "example": "http://example.com/storage/images/category/banner/banner.jpg"
                                        },
                                        "product_count": {
                                            "description": "Total number of products in the category",
                                            "type": "integer",
                                            "example": 50
                                        },
                                        "products": {
                                            "description": "List of products in the category",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "description": "Product ID",
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "description": "Product name",
                                                        "type": "string",
                                                        "example": "Wooden Chair"
                                                    },
                                                    "slug": {
                                                        "description": "Product slug",
                                                        "type": "string",
                                                        "example": "wooden-chair"
                                                    },
                                                    "is_set": {
                                                        "description": "Indicates if the product is part of a set",
                                                        "type": "boolean",
                                                        "example": false
                                                    },
                                                    "price": {
                                                        "description": "Product price",
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 100
                                                    },
                                                    "discount": {
                                                        "description": "Discount percentage",
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 10
                                                    },
                                                    "discount_ends_at": {
                                                        "description": "Discount expiration time",
                                                        "type": "string",
                                                        "format": "datetime",
                                                        "example": "2024-11-30T23:59:59Z",
                                                        "nullable": true
                                                    },
                                                    "final_price": {
                                                        "description": "Final price after discount",
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 90
                                                    },
                                                    "main_image": {
                                                        "description": "URL of the main product image",
                                                        "type": "string",
                                                        "example": "http://example.com/storage/images/products/image.jpg"
                                                    },
                                                    "average_rating": {
                                                        "description": "Average customer rating",
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 4.5
                                                    },
                                                    "is_in_basket": {
                                                        "description": "Indicates if the product is in the user's basket",
                                                        "type": "boolean",
                                                        "example": false
                                                    },
                                                    "is_favorite": {
                                                        "description": "Indicates if the product is in the user's favorites",
                                                        "type": "boolean",
                                                        "example": false
                                                    },
                                                    "remaining_discount_seconds": {
                                                        "description": "Remaining seconds for the discount",
                                                        "type": "integer",
                                                        "example": 3600,
                                                        "nullable": true
                                                    },
                                                    "has_unlimited_discount": {
                                                        "description": "Indicates if the discount is unlimited",
                                                        "type": "boolean",
                                                        "example": false
                                                    },
                                                    "has_limited_discount": {
                                                        "description": "Indicates if the discount is limited",
                                                        "type": "boolean",
                                                        "example": true
                                                    },
                                                    "badge": {
                                                        "description": "URL of the product badge image",
                                                        "type": "string",
                                                        "example": "http://example.com/storage/images/badge/badge1.png",
                                                        "nullable": true
                                                    },
                                                    "badge2": {
                                                        "description": "URL of the secondary product badge image",
                                                        "type": "string",
                                                        "example": "http://example.com/storage/images/badge/badge2.png",
                                                        "nullable": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "subcategories": {
                                            "description": "List of subcategories",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "category_id": {
                                                        "description": "Subcategory ID",
                                                        "type": "integer",
                                                        "example": 10
                                                    },
                                                    "name": {
                                                        "description": "Subcategory name",
                                                        "type": "string",
                                                        "example": "Sofas"
                                                    },
                                                    "description": {
                                                        "description": "Subcategory description",
                                                        "type": "string",
                                                        "example": "Comfortable sofas for your living room."
                                                    },
                                                    "banner_image": {
                                                        "description": "URL of the banner image",
                                                        "type": "string",
                                                        "example": "http://example.com/storage/images/subcategories/banner/banner.jpg"
                                                    },
                                                    "products": {
                                                        "description": "Products in the subcategory",
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "id": {
                                                                    "description": "Product ID",
                                                                    "type": "integer",
                                                                    "example": 101
                                                                },
                                                                "name": {
                                                                    "description": "Product name",
                                                                    "type": "string",
                                                                    "example": "Modern Sofa"
                                                                },
                                                                "price": {
                                                                    "description": "Product price",
                                                                    "type": "number",
                                                                    "format": "float",
                                                                    "example": 200
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Category not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/category/{slug}": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Retrieve details of a specific category by slug",
                "description": "Fetches category details along with its subcategories and products.",
                "operationId": "getCategoryDetailsBySlug",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Category slug",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "qonaq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "slug": {
                                            "description": "Category slug",
                                            "type": "string",
                                            "example": "living-room"
                                        },
                                        "name": {
                                            "description": "Category name",
                                            "type": "string",
                                            "example": "Living Room"
                                        },
                                        "description": {
                                            "description": "Category description",
                                            "type": "string",
                                            "example": "Explore our living room furniture."
                                        },
                                        "meta_title": {
                                            "description": "Meta title for SEO",
                                            "type": "string",
                                            "example": "Living Room Furniture"
                                        },
                                        "meta_description": {
                                            "description": "Meta description for SEO",
                                            "type": "string",
                                            "example": "Discover premium furniture for your living room."
                                        },
                                        "description_web": {
                                            "description": "Detailed web description",
                                            "type": "string",
                                            "example": "A wide selection of living room furniture for all tastes."
                                        },
                                        "banner_image": {
                                            "description": "URL of the banner image",
                                            "type": "string",
                                            "example": "http://example.com/storage/images/category/banner/banner.jpg"
                                        },
                                        "product_count": {
                                            "description": "Total number of products in the category",
                                            "type": "integer",
                                            "example": 50
                                        },
                                        "products": {
                                            "description": "List of products in the category",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "description": "Product ID",
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "description": "Product name",
                                                        "type": "string",
                                                        "example": "Wooden Chair"
                                                    },
                                                    "slug": {
                                                        "description": "Product slug",
                                                        "type": "string",
                                                        "example": "wooden-chair"
                                                    },
                                                    "is_set": {
                                                        "description": "Indicates if the product is part of a set",
                                                        "type": "boolean",
                                                        "example": false
                                                    },
                                                    "price": {
                                                        "description": "Product price",
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 100
                                                    },
                                                    "discount": {
                                                        "description": "Discount percentage",
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 10
                                                    },
                                                    "discount_ends_at": {
                                                        "description": "Discount expiration time",
                                                        "type": "string",
                                                        "format": "datetime",
                                                        "example": "2024-11-30T23:59:59Z",
                                                        "nullable": true
                                                    },
                                                    "final_price": {
                                                        "description": "Final price after discount",
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 90
                                                    },
                                                    "main_image": {
                                                        "description": "URL of the main product image",
                                                        "type": "string",
                                                        "example": "http://example.com/storage/images/products/image.jpg"
                                                    },
                                                    "average_rating": {
                                                        "description": "Average customer rating",
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 4.5
                                                    },
                                                    "is_in_basket": {
                                                        "description": "Indicates if the product is in the user's basket",
                                                        "type": "boolean",
                                                        "example": false
                                                    },
                                                    "is_favorite": {
                                                        "description": "Indicates if the product is in the user's favorites",
                                                        "type": "boolean",
                                                        "example": false
                                                    },
                                                    "remaining_discount_seconds": {
                                                        "description": "Remaining seconds for the discount",
                                                        "type": "integer",
                                                        "example": 3600,
                                                        "nullable": true
                                                    },
                                                    "has_unlimited_discount": {
                                                        "description": "Indicates if the discount is unlimited",
                                                        "type": "boolean",
                                                        "example": false
                                                    },
                                                    "has_limited_discount": {
                                                        "description": "Indicates if the discount is limited",
                                                        "type": "boolean",
                                                        "example": true
                                                    },
                                                    "badge": {
                                                        "description": "URL of the product badge image",
                                                        "type": "string",
                                                        "example": "http://example.com/storage/images/badge/badge1.png",
                                                        "nullable": true
                                                    },
                                                    "badge2": {
                                                        "description": "URL of the secondary product badge image",
                                                        "type": "string",
                                                        "example": "http://example.com/storage/images/badge/badge2.png",
                                                        "nullable": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "subcategories": {
                                            "description": "List of subcategories",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "category_id": {
                                                        "description": "Subcategory ID",
                                                        "type": "integer",
                                                        "example": 10
                                                    },
                                                    "name": {
                                                        "description": "Subcategory name",
                                                        "type": "string",
                                                        "example": "Sofas"
                                                    },
                                                    "description": {
                                                        "description": "Subcategory description",
                                                        "type": "string",
                                                        "example": "Comfortable sofas for your living room."
                                                    },
                                                    "banner_image": {
                                                        "description": "URL of the banner image",
                                                        "type": "string",
                                                        "example": "http://example.com/storage/images/subcategories/banner/banner.jpg"
                                                    },
                                                    "products": {
                                                        "description": "Products in the subcategory",
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "id": {
                                                                    "description": "Product ID",
                                                                    "type": "integer",
                                                                    "example": 101
                                                                },
                                                                "name": {
                                                                    "description": "Product name",
                                                                    "type": "string",
                                                                    "example": "Modern Sofa"
                                                                },
                                                                "price": {
                                                                    "description": "Product price",
                                                                    "type": "number",
                                                                    "format": "float",
                                                                    "example": 200
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Category not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/subcategory-details": {
            "get": {
                "tags": [
                    "Subcategories"
                ],
                "summary": "Retrieve details of a specific subcategory",
                "description": "Fetches subcategory details along with its associated products. You can filter by `id` or `slug`, sort the products, and paginate the results.",
                "operationId": "getSubcategoryDetails",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Subcategory ID",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "Subcategory slug",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "living-room-furniture"
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Sort products by a specific field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "price",
                                "name"
                            ],
                            "example": "price"
                        }
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "description": "Sort direction for the products",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc",
                                "default"
                            ],
                            "example": "asc"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Subcategory details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "subcategory": {
                                            "description": "Details of the subcategory",
                                            "properties": {
                                                "category_id": {
                                                    "description": "Category ID",
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "description": "Subcategory name",
                                                    "type": "string",
                                                    "example": "Living Room"
                                                },
                                                "slug": {
                                                    "description": "Subcategory slug",
                                                    "type": "string",
                                                    "example": "living-room"
                                                },
                                                "description": {
                                                    "description": "Subcategory description",
                                                    "type": "string",
                                                    "example": "Furniture for your living room."
                                                },
                                                "meta_title": {
                                                    "description": "Meta title for SEO",
                                                    "type": "string",
                                                    "example": "Living Room Furniture"
                                                },
                                                "meta_description": {
                                                    "description": "Meta description for SEO",
                                                    "type": "string",
                                                    "example": "Best furniture for living rooms."
                                                },
                                                "description_web": {
                                                    "description": "Web description for the subcategory",
                                                    "type": "string",
                                                    "example": "Browse our premium furniture selection."
                                                },
                                                "banner_image": {
                                                    "description": "URL of the banner image",
                                                    "type": "string",
                                                    "example": "http://example.com/storage/images/subcategories/banner/banner.jpg"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "product_count": {
                                            "description": "Number of products in the subcategory",
                                            "type": "integer",
                                            "example": 20
                                        },
                                        "products": {
                                            "description": "List of products in the subcategory",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "description": "Product ID",
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "slug": {
                                                        "description": "Product slug",
                                                        "type": "string",
                                                        "example": "modern-sofa"
                                                    },
                                                    "name": {
                                                        "description": "Product name",
                                                        "type": "string",
                                                        "example": "Modern Sofa"
                                                    },
                                                    "is_set": {
                                                        "description": "Indicates if the product is part of a set",
                                                        "type": "boolean",
                                                        "example": false
                                                    },
                                                    "price": {
                                                        "description": "Product price",
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 300
                                                    },
                                                    "discount": {
                                                        "description": "Discount percentage",
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 15
                                                    },
                                                    "discount_ends_at": {
                                                        "description": "Discount end time",
                                                        "type": "string",
                                                        "format": "datetime",
                                                        "example": "2024-11-30T23:59:59Z",
                                                        "nullable": true
                                                    },
                                                    "final_price": {
                                                        "description": "Final price after discount",
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 255
                                                    },
                                                    "main_image": {
                                                        "description": "URL of the main product image",
                                                        "type": "string",
                                                        "example": "http://example.com/storage/images/products/sofa.jpg"
                                                    },
                                                    "average_rating": {
                                                        "description": "Average product rating",
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 4.7
                                                    },
                                                    "is_in_basket": {
                                                        "description": "Indicates if the product is in the user's basket",
                                                        "type": "boolean",
                                                        "example": false
                                                    },
                                                    "is_favorite": {
                                                        "description": "Indicates if the product is in the user's favorites",
                                                        "type": "boolean",
                                                        "example": true
                                                    },
                                                    "remaining_discount_seconds": {
                                                        "description": "Remaining seconds for the discount",
                                                        "type": "integer",
                                                        "example": 3600,
                                                        "nullable": true
                                                    },
                                                    "badge": {
                                                        "description": "URL of the product badge image",
                                                        "type": "string",
                                                        "example": "http://example.com/storage/images/badges/badge.png",
                                                        "nullable": true
                                                    },
                                                    "badge2": {
                                                        "description": "URL of the secondary product badge image",
                                                        "type": "string",
                                                        "example": "http://example.com/storage/images/badges/badge2.png",
                                                        "nullable": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Subcategory not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Category or Subcategory not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/homescreen-subcategories": {
            "get": {
                "tags": [
                    "Subcategories"
                ],
                "summary": "Retrieve subcategories for the home screen widget",
                "description": "Fetches subcategories marked as homescreen widgets with their details and images.",
                "operationId": "getHomescreenSubcategories",
                "responses": {
                    "200": {
                        "description": "Homescreen subcategories retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "description": "Subcategory ID",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "description": "Subcategory name",
                                                "type": "string",
                                                "example": "Living Room Sofas"
                                            },
                                            "slug": {
                                                "description": "Subcategory slug",
                                                "type": "string",
                                                "example": "living-room-sofas"
                                            },
                                            "description": {
                                                "description": "Subcategory description",
                                                "type": "string",
                                                "example": "Premium sofas for your living room."
                                            },
                                            "image": {
                                                "description": "URL of the subcategory image",
                                                "type": "string",
                                                "example": "http://example.com/storage/images/subcategories/small/sofa.jpg"
                                            },
                                            "banner_image": {
                                                "description": "URL of the banner image",
                                                "type": "string",
                                                "example": "http://example.com/storage/images/subcategories/banner/banner.jpg"
                                            },
                                            "widget_view_image": {
                                                "description": "URL of the widget view image",
                                                "type": "string",
                                                "example": "http://example.com/storage/images/subcategories/homescreen/widget.jpg"
                                            },
                                            "is_popular": {
                                                "description": "Indicates if the subcategory is popular",
                                                "type": "boolean",
                                                "example": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/checkout/details": {
            "post": {
                "tags": [
                    "Checkout"
                ],
                "summary": "Retrieve checkout details including applicable bonus usage",
                "description": "Calculates the maximum bonus amount that can be applied to a checkout based on the final total and the user's remaining bonus amount.",
                "operationId": "getCheckoutDetails",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "final_total": {
                                        "description": "Final total amount for the checkout",
                                        "type": "number",
                                        "format": "float",
                                        "example": 150.5
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Checkout details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "bonus_can_be_used": {
                                            "description": "Maximum bonus amount that can be applied to this checkout",
                                            "type": "number",
                                            "format": "float",
                                            "example": 100
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Operation status",
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "User not authenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/orders": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Retrieve all orders for the authenticated user",
                "description": "Returns a list of orders belonging to the authenticated user with basic information.",
                "operationId": "getUserOrders",
                "responses": {
                    "200": {
                        "description": "List of user orders",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "description": "Order ID",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "code": {
                                                "description": "Order code",
                                                "type": "string",
                                                "example": "NYC1C"
                                            },
                                            "date": {
                                                "description": "Order creation date",
                                                "type": "string",
                                                "format": "date",
                                                "example": "15.11.2024"
                                            },
                                            "status": {
                                                "description": "Order status",
                                                "type": "string",
                                                "example": "pending"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/orders/status/{status}": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Retrieve orders by status",
                "description": "Returns a list of orders filtered by their status for the authenticated user.",
                "operationId": "getUserOrdersByStatus",
                "parameters": [
                    {
                        "name": "status",
                        "in": "path",
                        "description": "Order status to filter by",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "pending"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of orders filtered by status",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "description": "Order ID",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "status": {
                                                "description": "Order status",
                                                "type": "string",
                                                "example": "pending"
                                            },
                                            "date": {
                                                "description": "Order creation date",
                                                "type": "string",
                                                "format": "date",
                                                "example": "15.11.2024"
                                            },
                                            "code": {
                                                "description": "Order code",
                                                "type": "string",
                                                "example": "NYC1C"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/orders/date-range": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Retrieve orders within a specific date range",
                "description": "Returns a list of orders for the authenticated user that fall within a specified date range.",
                "operationId": "getUserOrdersByDateRange",
                "parameters": [
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Start date of the range in YYYY-MM-DD format",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2024-11-01"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "End date of the range in YYYY-MM-DD format",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2024-11-15"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of orders within the date range",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "description": "Order ID",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "date": {
                                                "description": "Order creation date",
                                                "type": "string",
                                                "format": "date",
                                                "example": "2024-11-10"
                                            },
                                            "status": {
                                                "description": "Order status",
                                                "type": "string",
                                                "example": "pending"
                                            },
                                            "code": {
                                                "description": "Order code",
                                                "type": "string",
                                                "example": "NYC1C"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/orders/{id}": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Retrieve order details",
                "description": "Returns detailed information about a specific order for the authenticated user, including items and discounts.",
                "operationId": "getOrderDetails",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "order_total": {
                                            "description": "Order total before discounts",
                                            "type": "number",
                                            "format": "float",
                                            "example": 200.5
                                        },
                                        "final_total": {
                                            "description": "Order total after all discounts",
                                            "type": "number",
                                            "format": "float",
                                            "example": 180
                                        },
                                        "item_discounts_total": {
                                            "description": "Total item discounts applied",
                                            "type": "number",
                                            "format": "float",
                                            "example": 15
                                        },
                                        "coupon_discount": {
                                            "description": "Total coupon discount applied",
                                            "type": "number",
                                            "format": "float",
                                            "example": 5.5
                                        },
                                        "items": {
                                            "description": "List of items in the order",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "description": "Item ID",
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "product_id": {
                                                        "description": "Product ID",
                                                        "type": "integer",
                                                        "example": 101
                                                    },
                                                    "product_name": {
                                                        "description": "Name of the product",
                                                        "type": "string",
                                                        "example": "Wooden Chair"
                                                    },
                                                    "quantity": {
                                                        "description": "Quantity of the product",
                                                        "type": "integer",
                                                        "example": 2
                                                    },
                                                    "price": {
                                                        "description": "Price of the product",
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 100
                                                    },
                                                    "discount_amount": {
                                                        "description": "Discount amount applied to the item",
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 10
                                                    },
                                                    "final_price": {
                                                        "description": "Final price after discount",
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 90
                                                    },
                                                    "main_image": {
                                                        "description": "URL of the product's main image",
                                                        "type": "string",
                                                        "example": "https://example.com/image.jpg"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Order not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/orders/{id}/all-statuses": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Retrieve delivery statuses for an order",
                "description": "Returns the delivery statuses of a specific order, including the current status and the date each status was reached.",
                "operationId": "getOrderDeliveryStatus",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order delivery statuses",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "order_id": {
                                            "description": "Order ID",
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "statuses": {
                                            "description": "List of delivery statuses with dates",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "status": {
                                                        "description": "Status name",
                                                        "type": "string",
                                                        "example": "shipping"
                                                    },
                                                    "changed_at": {
                                                        "description": "Date when the status was reached",
                                                        "type": "string",
                                                        "format": "datetime",
                                                        "example": "2024-11-15 10:30:00",
                                                        "nullable": true
                                                    },
                                                    "is_current": {
                                                        "description": "Indicates if this is the current status",
                                                        "type": "boolean",
                                                        "example": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Order not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/company/about-us": {
            "get": {
                "tags": [
                    "Company"
                ],
                "summary": "Get About Us content",
                "description": "Retrieves the 'About Us' page content, including the title and description.",
                "operationId": "getAboutUs",
                "responses": {
                    "200": {
                        "description": "About Us content retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "title": {
                                            "description": "Title of the About Us section",
                                            "type": "string",
                                            "example": "About Our Company"
                                        },
                                        "description": {
                                            "description": "Detailed description of the company",
                                            "type": "string",
                                            "example": "We are a leading company providing exceptional services..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No About Us content available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "No About Us content available"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/company/faq-page": {
            "get": {
                "tags": [
                    "Company"
                ],
                "summary": "Get FAQ page details",
                "description": "Retrieves FAQ page details including contact information, frequently asked questions, and social media links.",
                "operationId": "getFaqPage",
                "responses": {
                    "200": {
                        "description": "FAQ details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "email": {
                                            "description": "Email address for contact",
                                            "type": "string",
                                            "example": "info@company.com"
                                        },
                                        "email_title": {
                                            "description": "Title for email section",
                                            "type": "string",
                                            "example": "Contact Us via Email"
                                        },
                                        "email_description": {
                                            "description": "Description for email contact",
                                            "type": "string",
                                            "example": "We respond within 24 hours."
                                        },
                                        "phone_number": {
                                            "description": "Phone number for contact",
                                            "type": "string",
                                            "example": "+1-800-123-4567"
                                        },
                                        "phone_title": {
                                            "description": "Title for phone section",
                                            "type": "string",
                                            "example": "Call Us"
                                        },
                                        "phone_description": {
                                            "description": "Description for phone contact",
                                            "type": "string",
                                            "example": "Our support team is available 24/7."
                                        },
                                        "questions": {
                                            "description": "List of frequently asked questions",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "question": {
                                                        "description": "FAQ question",
                                                        "type": "string",
                                                        "example": "How can I reset my password?"
                                                    },
                                                    "answer": {
                                                        "description": "Answer to the question",
                                                        "type": "string",
                                                        "example": "Click on the 'Forgot Password' link on the login page."
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "social_media_links": {
                                            "description": "List of social media links",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "icon_path": {
                                                        "description": "Path to social media icon",
                                                        "type": "string",
                                                        "example": "https://example.com/storage/images/social_media_icons/facebook.svg"
                                                    },
                                                    "url": {
                                                        "description": "Social media URL",
                                                        "type": "string",
                                                        "example": "https://www.facebook.com/company"
                                                    },
                                                    "type": {
                                                        "description": "Type of social media",
                                                        "type": "string",
                                                        "example": "facebook"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No FAQ details available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "No FAQ details available"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/company/pages": {
            "get": {
                "tags": [
                    "Company"
                ],
                "summary": "Get pages displayed in the footer",
                "description": "Retrieves a list of pages that are configured to appear in the footer, including their title and content.",
                "operationId": "getFooterPages",
                "responses": {
                    "200": {
                        "description": "Footer pages retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "title": {
                                                "description": "Title of the page",
                                                "type": "string",
                                                "example": "Privacy Policy"
                                            },
                                            "content": {
                                                "description": "Content of the page",
                                                "type": "string",
                                                "example": "We value your privacy and are committed to protecting it."
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/company/stores": {
            "get": {
                "tags": [
                    "Stores"
                ],
                "summary": "Get all stores grouped by region",
                "description": "Retrieves all stores grouped by their respective regions, including store details and associated phone numbers.",
                "operationId": "getAllStores",
                "responses": {
                    "200": {
                        "description": "Stores retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "regions": {
                                            "description": "List of regions with their stores",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "description": "Region ID",
                                                        "type": "integer",
                                                        "example": 1,
                                                        "nullable": true
                                                    },
                                                    "name": {
                                                        "description": "Region name",
                                                        "type": "string",
                                                        "example": "Downtown"
                                                    },
                                                    "stores": {
                                                        "description": "List of stores in the region",
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "id": {
                                                                    "description": "Store ID",
                                                                    "type": "integer",
                                                                    "example": 1
                                                                },
                                                                "name": {
                                                                    "description": "Store name",
                                                                    "type": "string",
                                                                    "example": "Main Street Store"
                                                                },
                                                                "address": {
                                                                    "description": "Store address",
                                                                    "type": "string",
                                                                    "example": "123 Main St"
                                                                },
                                                                "city": {
                                                                    "description": "City of the store",
                                                                    "type": "string",
                                                                    "example": "Springfield"
                                                                },
                                                                "latitude": {
                                                                    "description": "Latitude of the store",
                                                                    "type": "number",
                                                                    "format": "float",
                                                                    "example": 40.7128
                                                                },
                                                                "longitude": {
                                                                    "description": "Longitude of the store",
                                                                    "type": "number",
                                                                    "format": "float",
                                                                    "example": -74.006
                                                                },
                                                                "phone_numbers": {
                                                                    "description": "Phone numbers of the store",
                                                                    "type": "array",
                                                                    "items": {
                                                                        "properties": {
                                                                            "id": {
                                                                                "description": "Phone number ID",
                                                                                "type": "integer",
                                                                                "example": 1
                                                                            },
                                                                            "store_id": {
                                                                                "description": "Store ID",
                                                                                "type": "integer",
                                                                                "example": 1
                                                                            },
                                                                            "phone_number": {
                                                                                "description": "Phone number",
                                                                                "type": "string",
                                                                                "example": "(123) 456-7890"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/company/stores/nearest": {
            "get": {
                "tags": [
                    "Stores"
                ],
                "summary": "Get the nearest store",
                "description": "Finds the nearest store to the provided latitude and longitude coordinates.",
                "operationId": "getNearestStore",
                "parameters": [
                    {
                        "name": "latitude",
                        "in": "query",
                        "description": "Latitude of the user's location",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "example": 40.7128
                        }
                    },
                    {
                        "name": "longitude",
                        "in": "query",
                        "description": "Longitude of the user's location",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "example": -74.006
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Nearest store retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "description": "Store ID",
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "description": "Store name",
                                            "type": "string",
                                            "example": "Main Street Store"
                                        },
                                        "address": {
                                            "description": "Store address",
                                            "type": "string",
                                            "example": "123 Main St"
                                        },
                                        "city": {
                                            "description": "City of the store",
                                            "type": "string",
                                            "example": "Springfield"
                                        },
                                        "latitude": {
                                            "description": "Latitude of the store",
                                            "type": "number",
                                            "format": "float",
                                            "example": 40.7128
                                        },
                                        "longitude": {
                                            "description": "Longitude of the store",
                                            "type": "number",
                                            "format": "float",
                                            "example": -74.006
                                        },
                                        "phone_numbers": {
                                            "description": "Phone numbers of the store",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "description": "Phone number ID",
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "store_id": {
                                                        "description": "Store ID",
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "phone_number": {
                                                        "description": "Phone number",
                                                        "type": "string",
                                                        "example": "(123) 456-7890"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Validation failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/home-screen-sliders": {
            "get": {
                "tags": [
                    "Home Screen Sliders"
                ],
                "summary": "Retrieve all active home screen sliders",
                "description": "Fetches a list of all active sliders on the home screen. Each slider may have an associated news item.",
                "operationId": "getHomeScreenSliders",
                "responses": {
                    "200": {
                        "description": "List of active home screen sliders retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "description": "Slider ID",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "news_id": {
                                                "description": "Associated news ID",
                                                "type": "integer",
                                                "example": 2,
                                                "nullable": true
                                            },
                                            "slider_image": {
                                                "description": "Slider image filename",
                                                "type": "string",
                                                "example": "slider1.jpg"
                                            },
                                            "full_slider_image": {
                                                "description": "Full URL of the slider image",
                                                "type": "string",
                                                "example": "http://example.com/storage/images/home_screen/sliders/slider1.jpg"
                                            },
                                            "is_active": {
                                                "description": "Indicates whether the slider is active",
                                                "type": "boolean",
                                                "example": true
                                            },
                                            "news": {
                                                "description": "Associated news item",
                                                "properties": {
                                                    "id": {
                                                        "description": "News ID",
                                                        "type": "integer",
                                                        "example": 2
                                                    },
                                                    "title": {
                                                        "description": "Title of the news",
                                                        "type": "string",
                                                        "example": "Breaking News!"
                                                    },
                                                    "content": {
                                                        "description": "Content of the news",
                                                        "type": "string",
                                                        "example": "Detailed news description."
                                                    }
                                                },
                                                "type": "object",
                                                "nullable": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/home-screen-sliders/{id}": {
            "get": {
                "tags": [
                    "Home Screen Sliders"
                ],
                "summary": "Retrieve details of a specific home screen slider",
                "description": "Fetches detailed information about a specific home screen slider by its ID, including its associated news item if available.",
                "operationId": "getHomeScreenSliderDetails",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the home screen slider",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Home screen slider details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "description": "Slider ID",
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "news_id": {
                                            "description": "Associated news ID",
                                            "type": "integer",
                                            "example": 2,
                                            "nullable": true
                                        },
                                        "slider_image": {
                                            "description": "Slider image filename",
                                            "type": "string",
                                            "example": "slider1.jpg"
                                        },
                                        "full_slider_image": {
                                            "description": "Full URL of the slider image",
                                            "type": "string",
                                            "example": "http://example.com/storage/images/home_screen/sliders/slider1.jpg"
                                        },
                                        "is_active": {
                                            "description": "Indicates whether the slider is active",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "news": {
                                            "description": "Associated news item",
                                            "properties": {
                                                "id": {
                                                    "description": "News ID",
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "title": {
                                                    "description": "Title of the news",
                                                    "type": "string",
                                                    "example": "Breaking News!"
                                                },
                                                "content": {
                                                    "description": "Content of the news",
                                                    "type": "string",
                                                    "example": "Detailed news description."
                                                }
                                            },
                                            "type": "object",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Slider not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Slider not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/ideas": {
            "get": {
                "tags": [
                    "Ideas"
                ],
                "summary": "Retrieve all ideas",
                "description": "Fetches a list of all ideas with their associated sub-ideas.",
                "operationId": "getAllIdeas",
                "responses": {
                    "200": {
                        "description": "List of ideas retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "description": "Idea ID",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "title_category_view": {
                                                "description": "Title for category view",
                                                "type": "string",
                                                "example": "Living Room Ideas"
                                            },
                                            "title_homepage_tab_view": {
                                                "description": "Title for homepage tab view",
                                                "type": "string",
                                                "example": "Living Room"
                                            },
                                            "is_active": {
                                                "description": "Indicates if the idea is active",
                                                "type": "boolean",
                                                "example": true
                                            },
                                            "sub_ideas": {
                                                "description": "List of sub-ideas associated with the idea",
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "id": {
                                                            "description": "Sub-idea ID",
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "title": {
                                                            "description": "Sub-idea title",
                                                            "type": "string",
                                                            "example": "Modern Sofas"
                                                        },
                                                        "image_category_view": {
                                                            "description": "Category view image URL",
                                                            "type": "string",
                                                            "example": "http://example.com/storage/images/sofas.jpg"
                                                        },
                                                        "image_homepage_tab_view": {
                                                            "description": "Homepage tab view image URL",
                                                            "type": "string",
                                                            "example": "http://example.com/storage/images/tab_view.jpg"
                                                        },
                                                        "is_active": {
                                                            "description": "Indicates if the sub-idea is active",
                                                            "type": "boolean",
                                                            "example": true
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/ideas/{idea}": {
            "get": {
                "tags": [
                    "Ideas"
                ],
                "summary": "Retrieve details of a specific idea",
                "description": "Fetches the details of a specific idea along with its associated sub-ideas.",
                "operationId": "getIdeaDetails",
                "parameters": [
                    {
                        "name": "idea",
                        "in": "path",
                        "description": "ID of the idea",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Idea details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "description": "Idea ID",
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "title_category_view": {
                                            "description": "Title for category view",
                                            "type": "string",
                                            "example": "Living Room Ideas"
                                        },
                                        "title_homepage_tab_view": {
                                            "description": "Title for homepage tab view",
                                            "type": "string",
                                            "example": "Living Room"
                                        },
                                        "is_active": {
                                            "description": "Indicates if the idea is active",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "sub_ideas": {
                                            "description": "List of sub-ideas associated with the idea",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "description": "Sub-idea ID",
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "title": {
                                                        "description": "Sub-idea title",
                                                        "type": "string",
                                                        "example": "Modern Sofas"
                                                    },
                                                    "image_category_view": {
                                                        "description": "Category view image URL",
                                                        "type": "string",
                                                        "example": "http://example.com/storage/images/sofas.jpg"
                                                    },
                                                    "image_homepage_tab_view": {
                                                        "description": "Homepage tab view image URL",
                                                        "type": "string",
                                                        "example": "http://example.com/storage/images/tab_view.jpg"
                                                    },
                                                    "is_active": {
                                                        "description": "Indicates if the sub-idea is active",
                                                        "type": "boolean",
                                                        "example": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Idea not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Idea not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/idea-widget-items": {
            "get": {
                "tags": [
                    "IdeaWidgetItems"
                ],
                "summary": "Retrieve all idea widget items",
                "description": "Fetches all idea widget items along with their associated sub-ideas.",
                "operationId": "getAllIdeaWidgetItems",
                "responses": {
                    "200": {
                        "description": "List of idea widget items retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "description": "Widget item ID",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "sort_order": {
                                                "description": "Sort order of the widget item",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "subIdea": {
                                                "description": "Associated sub-idea data",
                                                "properties": {
                                                    "id": {
                                                        "description": "Sub-idea ID",
                                                        "type": "integer",
                                                        "example": 100
                                                    },
                                                    "title": {
                                                        "description": "Sub-idea title",
                                                        "type": "string",
                                                        "example": "Modern Living Room"
                                                    },
                                                    "image_homepage_tab_view": {
                                                        "description": "URL of the sub-idea image for homepage tab view",
                                                        "type": "string",
                                                        "example": "http://example.com/storage/images/ideas/image1.jpg"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/idea-widget-tabs": {
            "get": {
                "tags": [
                    "IdeaWidgetTabs"
                ],
                "summary": "Retrieve all idea widget tabs",
                "description": "Fetches all idea widget tabs along with their associated idea and widget items. Each widget item includes a sub-idea with its image.",
                "operationId": "getAllIdeaWidgetTabs",
                "responses": {
                    "200": {
                        "description": "List of idea widget tabs retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "description": "Idea widget tab ID",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "sort_order": {
                                                "description": "Sort order of the widget tab",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "idea": {
                                                "description": "Associated idea data",
                                                "properties": {
                                                    "id": {
                                                        "description": "Idea ID",
                                                        "type": "integer",
                                                        "example": 100
                                                    },
                                                    "title_category_view": {
                                                        "description": "Category view title of the idea",
                                                        "type": "string",
                                                        "example": "Modern Home Decor"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "ideaWidgetItems": {
                                                "description": "List of widget items associated with the tab",
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "id": {
                                                            "description": "Widget item ID",
                                                            "type": "integer",
                                                            "example": 200
                                                        },
                                                        "subIdea": {
                                                            "description": "Associated sub-idea data",
                                                            "properties": {
                                                                "id": {
                                                                    "description": "Sub-idea ID",
                                                                    "type": "integer",
                                                                    "example": 300
                                                                },
                                                                "name": {
                                                                    "description": "Sub-idea title",
                                                                    "type": "string",
                                                                    "example": "Living Room Ideas"
                                                                },
                                                                "image_homepage_tab_view": {
                                                                    "description": "URL of the sub-idea image for homepage tab view",
                                                                    "type": "string",
                                                                    "example": "http://example.com/storage/images/ideas/image1.jpg"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/sub-ideas": {
            "get": {
                "tags": [
                    "SubIdeas"
                ],
                "summary": "Retrieve all sub-ideas",
                "description": "Fetches a list of all sub-ideas along with their associated items and the first image of each item.",
                "operationId": "getAllSubIdeas",
                "responses": {
                    "200": {
                        "description": "List of sub-ideas retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "description": "Sub-idea ID",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "description": "Sub-idea title",
                                                "type": "string",
                                                "example": "Modern Sofas"
                                            },
                                            "items": {
                                                "description": "List of items associated with the sub-idea",
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "id": {
                                                            "description": "Item ID",
                                                            "type": "integer",
                                                            "example": 10
                                                        },
                                                        "image": {
                                                            "description": "URL of the item's first image",
                                                            "type": "string",
                                                            "example": "http://example.com/storage/images/ideas/image1.jpg"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/sub-ideas/{subIdea}": {
            "get": {
                "tags": [
                    "SubIdeas"
                ],
                "summary": "Retrieve details of a specific sub-idea",
                "description": "Fetches the details of a specific sub-idea along with its associated items and the first image of each item.",
                "operationId": "getSubIdeaDetails",
                "parameters": [
                    {
                        "name": "subIdea",
                        "in": "path",
                        "description": "ID of the sub-idea",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sub-idea details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "description": "Sub-idea ID",
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "description": "Sub-idea title",
                                            "type": "string",
                                            "example": "Modern Sofas"
                                        },
                                        "items": {
                                            "description": "List of items associated with the sub-idea",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "description": "Item ID",
                                                        "type": "integer",
                                                        "example": 10
                                                    },
                                                    "image": {
                                                        "description": "URL of the item's first image",
                                                        "type": "string",
                                                        "example": "http://example.com/storage/images/ideas/image1.jpg"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Sub-idea not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Sub-idea not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/sub-idea-items": {
            "get": {
                "tags": [
                    "SubIdeaItems"
                ],
                "summary": "Retrieve all sub-idea items",
                "description": "Fetches a list of all sub-idea items along with their associated products and images.",
                "operationId": "getAllSubIdeaItems",
                "responses": {
                    "200": {
                        "description": "List of sub-idea items retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "description": "Sub-idea item ID",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "title": {
                                                "description": "Sub-idea item title",
                                                "type": "string",
                                                "example": "Modern Living Room Ideas"
                                            },
                                            "description": {
                                                "description": "Sub-idea item description",
                                                "type": "string",
                                                "example": "Inspiration for modern living room layouts."
                                            },
                                            "images": {
                                                "description": "List of associated images",
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "image_url": {
                                                            "description": "URL of the image",
                                                            "type": "string",
                                                            "example": "http://example.com/storage/images/ideas/image1.jpg"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "products": {
                                                "description": "List of associated products",
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "id": {
                                                            "description": "Product ID",
                                                            "type": "integer",
                                                            "example": 1001
                                                        },
                                                        "name": {
                                                            "description": "Product name",
                                                            "type": "string",
                                                            "example": "Modern Sofa"
                                                        },
                                                        "price": {
                                                            "description": "Product price",
                                                            "type": "number",
                                                            "format": "float",
                                                            "example": 999.99
                                                        },
                                                        "final_price": {
                                                            "description": "Final price after discount",
                                                            "type": "number",
                                                            "format": "float",
                                                            "example": 899.99
                                                        },
                                                        "discount": {
                                                            "description": "Discount percentage",
                                                            "type": "number",
                                                            "format": "float",
                                                            "example": 10
                                                        },
                                                        "main_image": {
                                                            "description": "URL of the product's main image",
                                                            "type": "string",
                                                            "example": "http://example.com/storage/images/products/sofa.jpg"
                                                        },
                                                        "is_in_basket": {
                                                            "description": "Indicates if the product is in the user's basket",
                                                            "type": "boolean",
                                                            "example": false
                                                        },
                                                        "is_favorite": {
                                                            "description": "Indicates if the product is marked as a favorite",
                                                            "type": "boolean",
                                                            "example": true
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/sub-idea-items/{subIdeaItem}": {
            "get": {
                "tags": [
                    "SubIdeaItems"
                ],
                "summary": "Retrieve details of a specific sub-idea item",
                "description": "Fetches the details of a specific sub-idea item, including its associated products and images.",
                "operationId": "getSubIdeaItemDetails",
                "parameters": [
                    {
                        "name": "subIdeaItem",
                        "in": "path",
                        "description": "ID of the sub-idea item",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sub-idea item details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "description": "Sub-idea item ID",
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "description": "Sub-idea item title",
                                            "type": "string",
                                            "example": "Modern Living Room Ideas"
                                        },
                                        "description": {
                                            "description": "Sub-idea item description",
                                            "type": "string",
                                            "example": "Inspiration for modern living room layouts."
                                        },
                                        "images": {
                                            "description": "List of associated images",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "image_url": {
                                                        "description": "URL of the image",
                                                        "type": "string",
                                                        "example": "http://example.com/storage/images/ideas/image1.jpg"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "products": {
                                            "description": "List of associated products",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "description": "Product ID",
                                                        "type": "integer",
                                                        "example": 1001
                                                    },
                                                    "name": {
                                                        "description": "Product name",
                                                        "type": "string",
                                                        "example": "Modern Sofa"
                                                    },
                                                    "price": {
                                                        "description": "Product price",
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 999.99
                                                    },
                                                    "final_price": {
                                                        "description": "Final price after discount",
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 899.99
                                                    },
                                                    "discount": {
                                                        "description": "Discount percentage",
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 10
                                                    },
                                                    "main_image": {
                                                        "description": "URL of the product's main image",
                                                        "type": "string",
                                                        "example": "http://example.com/storage/images/products/sofa.jpg"
                                                    },
                                                    "is_in_basket": {
                                                        "description": "Indicates if the product is in the user's basket",
                                                        "type": "boolean",
                                                        "example": false
                                                    },
                                                    "is_favorite": {
                                                        "description": "Indicates if the product is marked as a favorite",
                                                        "type": "boolean",
                                                        "example": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Sub-idea item not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Sub-idea item not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/news": {
            "get": {
                "tags": [
                    "News"
                ],
                "summary": "Retrieve all active news",
                "description": "Fetches a list of all active news items.",
                "operationId": "getNewsList",
                "responses": {
                    "200": {
                        "description": "List of active news items retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "description": "News ID",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "title": {
                                                "description": "Title of the news",
                                                "type": "string",
                                                "example": "Breaking News!"
                                            },
                                            "content": {
                                                "description": "Content of the news",
                                                "type": "string",
                                                "example": "Detailed description of the news."
                                            },
                                            "is_active": {
                                                "description": "Status of the news",
                                                "type": "boolean",
                                                "example": true
                                            },
                                            "banner_image": {
                                                "description": "Path to the banner image",
                                                "type": "string",
                                                "example": "news-banner.jpg"
                                            },
                                            "created_at": {
                                                "description": "Date and time when the news was created",
                                                "type": "string",
                                                "format": "datetime",
                                                "example": "2024-11-20T12:00:00Z"
                                            },
                                            "updated_at": {
                                                "description": "Date and time when the news was last updated",
                                                "type": "string",
                                                "format": "datetime",
                                                "example": "2024-11-20T12:30:00Z"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/news/{id}": {
            "get": {
                "tags": [
                    "News"
                ],
                "summary": "Retrieve details of a specific news item",
                "description": "Fetches detailed information of a specific news item by its ID, if it is active.",
                "operationId": "getNewsDetails",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the news item",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "News item details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "description": "News ID",
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "description": "Title of the news",
                                            "type": "string",
                                            "example": "Breaking News!"
                                        },
                                        "description": {
                                            "description": "Content of the news",
                                            "type": "string",
                                            "example": "Detailed description of the news."
                                        },
                                        "image": {
                                            "description": "URL of the banner image",
                                            "type": "string",
                                            "example": "http://example.com/storage/images/news/news-banner.jpg"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "News item not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "News item not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user/notifications": {
            "get": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Retrieve notifications for the authenticated user",
                "description": "Returns both general notifications (applicable to all users) and user-specific notifications for the authenticated user.",
                "operationId": "getUserNotifications",
                "responses": {
                    "200": {
                        "description": "Notifications retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Operation status",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "notifications": {
                                            "description": "List of notifications",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "description": "Notification ID",
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "title": {
                                                        "description": "Title of the notification",
                                                        "type": "string",
                                                        "example": "Welcome to the app!"
                                                    },
                                                    "message": {
                                                        "description": "Notification message",
                                                        "type": "string",
                                                        "example": "Don't forget to check our latest features."
                                                    },
                                                    "status": {
                                                        "description": "Notification status",
                                                        "type": "string",
                                                        "example": "unread"
                                                    },
                                                    "sent_at": {
                                                        "description": "Date and time when the notification was sent",
                                                        "type": "string",
                                                        "format": "datetime",
                                                        "example": "2024-11-20T14:35:00Z"
                                                    },
                                                    "user_id": {
                                                        "description": "User ID if the notification is user-specific, null for general notifications",
                                                        "type": "integer",
                                                        "example": 1,
                                                        "nullable": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Operation status",
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "User not authenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/most-viewed-products": {
            "get": {
                "tags": [
                    "Most Viewed Products"
                ],
                "summary": "Retrieve a list of most-viewed products",
                "description": "Fetches a list of most-viewed products with optional limit. Includes product details such as price, discount, and images.",
                "operationId": "getMostViewedProducts",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Maximum number of most-viewed products to retrieve, or 'all' for no limit",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "all",
                                "10",
                                "20",
                                "50"
                            ],
                            "example": "10"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of most-viewed products retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "description": "Product ID",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "description": "Product name",
                                                "type": "string",
                                                "example": "Wooden Chair"
                                            },
                                            "is_set": {
                                                "description": "Indicates if the product is part of a set",
                                                "type": "boolean",
                                                "example": false
                                            },
                                            "price": {
                                                "description": "Product price",
                                                "type": "number",
                                                "format": "float",
                                                "example": 100
                                            },
                                            "discount": {
                                                "description": "Discount percentage",
                                                "type": "number",
                                                "format": "float",
                                                "example": 10
                                            },
                                            "discount_ends_at": {
                                                "description": "Discount expiration time",
                                                "type": "string",
                                                "format": "datetime",
                                                "example": "2024-11-30T23:59:59Z",
                                                "nullable": true
                                            },
                                            "final_price": {
                                                "description": "Final price after discount",
                                                "type": "number",
                                                "format": "float",
                                                "example": 90
                                            },
                                            "main_image": {
                                                "description": "URL of the main product image",
                                                "type": "string",
                                                "example": "http://example.com/storage/images/products/image.jpg"
                                            },
                                            "average_rating": {
                                                "description": "Average customer rating",
                                                "type": "number",
                                                "format": "float",
                                                "example": 4.5
                                            },
                                            "is_in_basket": {
                                                "description": "Indicates if the product is in the user's basket",
                                                "type": "boolean",
                                                "example": false
                                            },
                                            "is_favorite": {
                                                "description": "Indicates if the product is in the user's favorites",
                                                "type": "boolean",
                                                "example": false
                                            },
                                            "remaining_discount_seconds": {
                                                "description": "Remaining seconds for the discount",
                                                "type": "integer",
                                                "example": 3600,
                                                "nullable": true
                                            },
                                            "has_unlimited_discount": {
                                                "description": "Indicates if the discount is unlimited",
                                                "type": "boolean",
                                                "example": false
                                            },
                                            "has_limited_discount": {
                                                "description": "Indicates if the discount is limited",
                                                "type": "boolean",
                                                "example": true
                                            },
                                            "badge": {
                                                "description": "URL of the product badge image",
                                                "type": "string",
                                                "example": "http://example.com/storage/images/badge/badge1.png",
                                                "nullable": true
                                            },
                                            "badge2": {
                                                "description": "URL of the secondary product badge image",
                                                "type": "string",
                                                "example": "http://example.com/storage/images/badge/badge2.png",
                                                "nullable": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid limit parameter",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Limit must be a positive integer or 'all'"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/most-viewed-products/{id}": {
            "get": {
                "tags": [
                    "Most Viewed Products"
                ],
                "summary": "Retrieve details of a specific most-viewed product",
                "description": "Fetches detailed information about a specific most-viewed product by its ID.",
                "operationId": "getMostViewedProductDetails",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the most-viewed product",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Most-viewed product details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "description": "Most-viewed product ID",
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "product": {
                                            "description": "Associated product details",
                                            "properties": {
                                                "id": {
                                                    "description": "Product ID",
                                                    "type": "integer",
                                                    "example": 100
                                                },
                                                "name": {
                                                    "description": "Product name",
                                                    "type": "string",
                                                    "example": "Wooden Chair"
                                                },
                                                "price": {
                                                    "description": "Product price",
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 100
                                                },
                                                "final_price": {
                                                    "description": "Final price after discounts",
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 90
                                                },
                                                "main_image": {
                                                    "description": "URL of the main product image",
                                                    "type": "string",
                                                    "example": "http://example.com/storage/images/products/image.jpg"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "order": {
                                            "description": "Display order of the most-viewed product",
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "created_at": {
                                            "description": "Creation date",
                                            "type": "string",
                                            "format": "datetime",
                                            "example": "2024-11-20T12:00:00Z"
                                        },
                                        "updated_at": {
                                            "description": "Last update date",
                                            "type": "string",
                                            "format": "datetime",
                                            "example": "2024-11-20T12:30:00Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Most-viewed product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Product not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/new-products": {
            "get": {
                "tags": [
                    "New Products"
                ],
                "summary": "Retrieve a list of new products",
                "description": "Fetches a list of new products with optional limit. Includes product details such as price, discount, and images.",
                "operationId": "getNewProducts",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Maximum number of new products to retrieve, or 'all' for no limit",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "all",
                                "10",
                                "20",
                                "50"
                            ],
                            "example": "10"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of new products retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "description": "Product ID",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "description": "Product name",
                                                "type": "string",
                                                "example": "Wooden Chair"
                                            },
                                            "is_set": {
                                                "description": "Indicates if the product is part of a set",
                                                "type": "boolean",
                                                "example": false
                                            },
                                            "price": {
                                                "description": "Product price",
                                                "type": "number",
                                                "format": "float",
                                                "example": 100
                                            },
                                            "discount": {
                                                "description": "Discount percentage",
                                                "type": "number",
                                                "format": "float",
                                                "example": 10
                                            },
                                            "discount_ends_at": {
                                                "description": "Discount expiration time",
                                                "type": "string",
                                                "format": "datetime",
                                                "example": "2024-11-30T23:59:59Z",
                                                "nullable": true
                                            },
                                            "final_price": {
                                                "description": "Final price after discount",
                                                "type": "number",
                                                "format": "float",
                                                "example": 90
                                            },
                                            "main_image": {
                                                "description": "URL of the main product image",
                                                "type": "string",
                                                "example": "http://example.com/storage/images/products/image.jpg"
                                            },
                                            "average_rating": {
                                                "description": "Average customer rating",
                                                "type": "number",
                                                "format": "float",
                                                "example": 4.5
                                            },
                                            "is_in_basket": {
                                                "description": "Indicates if the product is in the user's basket",
                                                "type": "boolean",
                                                "example": false
                                            },
                                            "is_favorite": {
                                                "description": "Indicates if the product is in the user's favorites",
                                                "type": "boolean",
                                                "example": false
                                            },
                                            "remaining_discount_seconds": {
                                                "description": "Remaining seconds for the discount",
                                                "type": "integer",
                                                "example": 3600,
                                                "nullable": true
                                            },
                                            "has_unlimited_discount": {
                                                "description": "Indicates if the discount is unlimited",
                                                "type": "boolean",
                                                "example": false
                                            },
                                            "has_limited_discount": {
                                                "description": "Indicates if the discount is limited",
                                                "type": "boolean",
                                                "example": true
                                            },
                                            "badge": {
                                                "description": "URL of the product badge image",
                                                "type": "string",
                                                "example": "http://example.com/storage/images/badge/badge1.png",
                                                "nullable": true
                                            },
                                            "badge2": {
                                                "description": "URL of the secondary product badge image",
                                                "type": "string",
                                                "example": "http://example.com/storage/images/badge/badge2.png",
                                                "nullable": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid limit parameter",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Limit must be a positive integer or 'all'"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/new-products/{id}": {
            "get": {
                "tags": [
                    "New Products"
                ],
                "summary": "Retrieve details of a specific new product",
                "description": "Fetches detailed information about a specific new product by its ID, including the associated product details.",
                "operationId": "getNewProductDetails",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the new product",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "New product details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "description": "New product ID",
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "order": {
                                            "description": "Display order of the new product",
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "product": {
                                            "description": "Associated product details",
                                            "properties": {
                                                "id": {
                                                    "description": "Product ID",
                                                    "type": "integer",
                                                    "example": 100
                                                },
                                                "name": {
                                                    "description": "Product name",
                                                    "type": "string",
                                                    "example": "Wooden Chair"
                                                },
                                                "price": {
                                                    "description": "Product price",
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 100
                                                },
                                                "final_price": {
                                                    "description": "Final price after discounts",
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 90
                                                },
                                                "main_image": {
                                                    "description": "URL of the main product image",
                                                    "type": "string",
                                                    "example": "http://example.com/storage/images/products/image.jpg"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "created_at": {
                                            "description": "Creation date of the new product",
                                            "type": "string",
                                            "format": "datetime",
                                            "example": "2024-11-20T12:00:00Z"
                                        },
                                        "updated_at": {
                                            "description": "Last update date of the new product",
                                            "type": "string",
                                            "format": "datetime",
                                            "example": "2024-11-20T12:30:00Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "New product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Product not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/selected-products": {
            "get": {
                "tags": [
                    "Selected Products"
                ],
                "summary": "Retrieve a list of selected products",
                "description": "Fetches a list of selected products with optional limit. Includes product details such as price, discount, and images.",
                "operationId": "getSelectedProducts",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Maximum number of selected products to retrieve, or 'all' for no limit",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "all",
                                "10",
                                "20",
                                "50"
                            ],
                            "example": "10"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of selected products retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "description": "Product ID",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "description": "Product name",
                                                "type": "string",
                                                "example": "Wooden Chair"
                                            },
                                            "slug": {
                                                "description": "Product slug",
                                                "type": "string",
                                                "example": "wooden-chair"
                                            },
                                            "is_set": {
                                                "description": "Indicates if the product is part of a set",
                                                "type": "boolean",
                                                "example": false
                                            },
                                            "price": {
                                                "description": "Product price",
                                                "type": "number",
                                                "format": "float",
                                                "example": 100
                                            },
                                            "discount": {
                                                "description": "Discount percentage",
                                                "type": "number",
                                                "format": "float",
                                                "example": 10
                                            },
                                            "discount_ends_at": {
                                                "description": "Discount expiration time",
                                                "type": "string",
                                                "format": "datetime",
                                                "example": "2024-11-30T23:59:59Z",
                                                "nullable": true
                                            },
                                            "final_price": {
                                                "description": "Final price after discount",
                                                "type": "number",
                                                "format": "float",
                                                "example": 90
                                            },
                                            "main_image": {
                                                "description": "URL of the main product image",
                                                "type": "string",
                                                "example": "http://example.com/storage/images/products/image.jpg"
                                            },
                                            "average_rating": {
                                                "description": "Average customer rating",
                                                "type": "number",
                                                "format": "float",
                                                "example": 4.5
                                            },
                                            "is_in_basket": {
                                                "description": "Indicates if the product is in the user's basket",
                                                "type": "boolean",
                                                "example": false
                                            },
                                            "is_favorite": {
                                                "description": "Indicates if the product is in the user's favorites",
                                                "type": "boolean",
                                                "example": false
                                            },
                                            "remaining_discount_seconds": {
                                                "description": "Remaining seconds for the discount",
                                                "type": "integer",
                                                "example": 3600,
                                                "nullable": true
                                            },
                                            "has_unlimited_discount": {
                                                "description": "Indicates if the discount is unlimited",
                                                "type": "boolean",
                                                "example": false
                                            },
                                            "has_limited_discount": {
                                                "description": "Indicates if the discount is limited",
                                                "type": "boolean",
                                                "example": true
                                            },
                                            "badge": {
                                                "description": "URL of the product badge image",
                                                "type": "string",
                                                "example": "http://example.com/storage/images/badge/badge1.png",
                                                "nullable": true
                                            },
                                            "badge2": {
                                                "description": "URL of the secondary product badge image",
                                                "type": "string",
                                                "example": "http://example.com/storage/images/badge/badge2.png",
                                                "nullable": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid limit parameter",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Limit must be a positive integer or 'all'"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/selected-products/{id}": {
            "get": {
                "tags": [
                    "Selected Products"
                ],
                "summary": "Retrieve details of a specific selected product",
                "description": "Fetches detailed information about a specific selected product by its ID.",
                "operationId": "getSelectedProductDetails",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the selected product",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Selected product details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "description": "Selected product ID",
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "product": {
                                            "description": "Associated product details",
                                            "properties": {
                                                "id": {
                                                    "description": "Product ID",
                                                    "type": "integer",
                                                    "example": 100
                                                },
                                                "name": {
                                                    "description": "Product name",
                                                    "type": "string",
                                                    "example": "Wooden Chair"
                                                },
                                                "slug": {
                                                    "description": "Product slug",
                                                    "type": "string",
                                                    "example": "wooden-chair"
                                                },
                                                "price": {
                                                    "description": "Product price",
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 100
                                                },
                                                "final_price": {
                                                    "description": "Final price after discounts",
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 90
                                                },
                                                "main_image": {
                                                    "description": "URL of the main product image",
                                                    "type": "string",
                                                    "example": "http://example.com/storage/images/products/image.jpg"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "order": {
                                            "description": "Display order of the selected product",
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "created_at": {
                                            "description": "Creation date",
                                            "type": "string",
                                            "format": "datetime",
                                            "example": "2024-11-20T12:00:00Z"
                                        },
                                        "updated_at": {
                                            "description": "Last update date",
                                            "type": "string",
                                            "format": "datetime",
                                            "example": "2024-11-20T12:30:00Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Selected product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Product not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/special-offer-products": {
            "get": {
                "tags": [
                    "Special Offer Products"
                ],
                "summary": "Retrieve a list of special offer products",
                "description": "Fetches a list of special offer products with optional limit. Includes product details such as price, discount, and images.",
                "operationId": "getSpecialOfferProducts",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Maximum number of special offer products to retrieve, or 'all' for no limit",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "all",
                                "10",
                                "20",
                                "50"
                            ],
                            "example": "10"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of special offer products retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "description": "Product ID",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "description": "Product name",
                                                "type": "string",
                                                "example": "Wooden Chair"
                                            },
                                            "is_set": {
                                                "description": "Indicates if the product is part of a set",
                                                "type": "boolean",
                                                "example": false
                                            },
                                            "price": {
                                                "description": "Product price",
                                                "type": "number",
                                                "format": "float",
                                                "example": 100
                                            },
                                            "discount": {
                                                "description": "Discount percentage",
                                                "type": "number",
                                                "format": "float",
                                                "example": 10
                                            },
                                            "discount_ends_at": {
                                                "description": "Discount expiration time",
                                                "type": "string",
                                                "format": "datetime",
                                                "example": "2024-11-30T23:59:59Z",
                                                "nullable": true
                                            },
                                            "final_price": {
                                                "description": "Final price after discount",
                                                "type": "number",
                                                "format": "float",
                                                "example": 90
                                            },
                                            "main_image": {
                                                "description": "URL of the main product image",
                                                "type": "string",
                                                "example": "http://example.com/storage/images/products/image.jpg"
                                            },
                                            "average_rating": {
                                                "description": "Average customer rating",
                                                "type": "number",
                                                "format": "float",
                                                "example": 4.5
                                            },
                                            "is_in_basket": {
                                                "description": "Indicates if the product is in the user's basket",
                                                "type": "boolean",
                                                "example": false
                                            },
                                            "is_favorite": {
                                                "description": "Indicates if the product is in the user's favorites",
                                                "type": "boolean",
                                                "example": false
                                            },
                                            "remaining_discount_seconds": {
                                                "description": "Remaining seconds for the discount",
                                                "type": "integer",
                                                "example": 3600,
                                                "nullable": true
                                            },
                                            "has_unlimited_discount": {
                                                "description": "Indicates if the discount is unlimited",
                                                "type": "boolean",
                                                "example": false
                                            },
                                            "has_limited_discount": {
                                                "description": "Indicates if the discount is limited",
                                                "type": "boolean",
                                                "example": true
                                            },
                                            "badge": {
                                                "description": "URL of the product badge image",
                                                "type": "string",
                                                "example": "http://example.com/storage/images/badge/badge1.png",
                                                "nullable": true
                                            },
                                            "badge2": {
                                                "description": "URL of the secondary product badge image",
                                                "type": "string",
                                                "example": "http://example.com/storage/images/badge/badge2.png",
                                                "nullable": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid limit parameter",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Limit must be a positive integer or 'all'"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/special-offer-products/{id}": {
            "get": {
                "tags": [
                    "Special Offer Products"
                ],
                "summary": "Retrieve details of a specific special offer product",
                "description": "Fetches detailed information about a specific special offer product by its ID.",
                "operationId": "getSpecialOfferProductDetails",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the special offer product",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Special offer product details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "description": "Special offer product ID",
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "product": {
                                            "description": "Associated product details",
                                            "properties": {
                                                "id": {
                                                    "description": "Product ID",
                                                    "type": "integer",
                                                    "example": 100
                                                },
                                                "name": {
                                                    "description": "Product name",
                                                    "type": "string",
                                                    "example": "Wooden Chair"
                                                },
                                                "price": {
                                                    "description": "Product price",
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 100
                                                },
                                                "final_price": {
                                                    "description": "Final price after discounts",
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 90
                                                },
                                                "main_image": {
                                                    "description": "URL of the main product image",
                                                    "type": "string",
                                                    "example": "http://example.com/storage/images/products/image.jpg"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "order": {
                                            "description": "Display order of the special offer product",
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "created_at": {
                                            "description": "Creation date",
                                            "type": "string",
                                            "format": "datetime",
                                            "example": "2024-11-20T12:00:00Z"
                                        },
                                        "updated_at": {
                                            "description": "Last update date",
                                            "type": "string",
                                            "format": "datetime",
                                            "example": "2024-11-20T12:30:00Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Special offer product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Product not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/favorites": {
            "get": {
                "tags": [
                    "Favorites"
                ],
                "summary": "Retrieve all favorite products for the authenticated user",
                "description": "Returns a list of all favorite products for the authenticated user with product details.",
                "operationId": "getUserFavorites",
                "responses": {
                    "200": {
                        "description": "List of favorite products",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "description": "Product ID",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "description": "Product name",
                                                "type": "string",
                                                "example": "Wooden Chair"
                                            },
                                            "is_set": {
                                                "description": "Indicates if the product is part of a set",
                                                "type": "boolean",
                                                "example": false
                                            },
                                            "price": {
                                                "description": "Price of the product",
                                                "type": "number",
                                                "format": "float",
                                                "example": 100
                                            },
                                            "discount": {
                                                "description": "Discount amount",
                                                "type": "number",
                                                "format": "float",
                                                "example": 10
                                            },
                                            "final_price": {
                                                "description": "Final price after discount",
                                                "type": "number",
                                                "format": "float",
                                                "example": 90
                                            },
                                            "main_image": {
                                                "description": "URL of the product's main image",
                                                "type": "string",
                                                "example": "https://example.com/image.jpg"
                                            },
                                            "average_rating": {
                                                "description": "Average rating of the product",
                                                "type": "number",
                                                "format": "float",
                                                "example": 4.5
                                            },
                                            "is_in_basket": {
                                                "description": "Indicates if the product is in the user's basket",
                                                "type": "boolean",
                                                "example": true
                                            },
                                            "is_favorite": {
                                                "description": "Indicates if the product is a favorite",
                                                "type": "boolean",
                                                "example": true
                                            },
                                            "remaining_discount_seconds": {
                                                "description": "Time remaining for the discount (in seconds)",
                                                "type": "integer",
                                                "example": 3600
                                            },
                                            "has_unlimited_discount": {
                                                "description": "Indicates if the discount is unlimited",
                                                "type": "boolean",
                                                "example": false
                                            },
                                            "badge": {
                                                "description": "URL of the first badge image",
                                                "type": "string",
                                                "example": "https://example.com/badge1.png",
                                                "nullable": true
                                            },
                                            "badge2": {
                                                "description": "URL of the second badge image",
                                                "type": "string",
                                                "example": "https://example.com/badge2.png",
                                                "nullable": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/favorites/toggle": {
            "post": {
                "tags": [
                    "Favorites"
                ],
                "summary": "Add or remove a product from favorites",
                "description": "Toggles the favorite status of a product for the authenticated user. Returns the updated favorite status and all favorite product IDs.",
                "operationId": "toggleFavorite",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "product_id": {
                                        "description": "ID of the product to toggle",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Favorite status toggled",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Operation status",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "product_id": {
                                            "description": "ID of the product",
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "product_name": {
                                            "description": "Name of the product",
                                            "type": "string",
                                            "example": "Wooden Chair"
                                        },
                                        "is_favorite": {
                                            "description": "Updated favorite status",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "favorites": {
                                            "description": "List of all favorite product IDs",
                                            "type": "array",
                                            "items": {
                                                "type": "integer",
                                                "example": 1
                                            }
                                        },
                                        "message": {
                                            "description": "Operation message",
                                            "type": "string",
                                            "example": "Product added to favorites"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Operation status",
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Product not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/favorites/remove": {
            "post": {
                "tags": [
                    "Favorites"
                ],
                "summary": "Remove a product from favorites",
                "description": "Removes a product from the authenticated user's favorites. Returns the updated list of favorite products.",
                "operationId": "removeFavorite",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "product_id": {
                                        "description": "ID of the product to remove from favorites",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product removed from favorites",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "description": "Product ID",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "description": "Product name",
                                                "type": "string",
                                                "example": "Wooden Chair"
                                            },
                                            "is_set": {
                                                "description": "Indicates if the product is part of a set",
                                                "type": "boolean",
                                                "example": false
                                            },
                                            "price": {
                                                "description": "Price of the product",
                                                "type": "number",
                                                "format": "float",
                                                "example": 100
                                            },
                                            "discount": {
                                                "description": "Discount amount",
                                                "type": "number",
                                                "format": "float",
                                                "example": 10
                                            },
                                            "final_price": {
                                                "description": "Final price after discount",
                                                "type": "number",
                                                "format": "float",
                                                "example": 90
                                            },
                                            "main_image": {
                                                "description": "URL of the product's main image",
                                                "type": "string",
                                                "example": "https://example.com/image.jpg"
                                            },
                                            "average_rating": {
                                                "description": "Average rating of the product",
                                                "type": "number",
                                                "format": "float",
                                                "example": 4.5
                                            },
                                            "is_in_basket": {
                                                "description": "Indicates if the product is in the user's basket",
                                                "type": "boolean",
                                                "example": true
                                            },
                                            "is_favorite": {
                                                "description": "Indicates if the product is a favorite",
                                                "type": "boolean",
                                                "example": true
                                            },
                                            "remaining_discount_seconds": {
                                                "description": "Time remaining for the discount (in seconds)",
                                                "type": "integer",
                                                "example": 3600
                                            },
                                            "has_unlimited_discount": {
                                                "description": "Indicates if the discount is unlimited",
                                                "type": "boolean",
                                                "example": false
                                            },
                                            "badge": {
                                                "description": "URL of the first badge image",
                                                "type": "string",
                                                "example": "https://example.com/badge1.png",
                                                "nullable": true
                                            },
                                            "badge2": {
                                                "description": "URL of the second badge image",
                                                "type": "string",
                                                "example": "https://example.com/badge2.png",
                                                "nullable": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found or not in favorites",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Operation status",
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Product not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/products/{id}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Retrieve product details",
                "description": "Returns detailed information about a specific product, including images, reviews, credit options, and similar products.",
                "operationId": "getProductDetails",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID or slug",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "123"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "description": "Product details",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/products/filter": {
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Filter products",
                "description": "Returns a list of products based on specified filters.",
                "operationId": "filterProducts",
                "requestBody": {
                    "description": "Filters for products",
                    "required": false
                },
                "responses": {
                    "200": {
                        "description": "Filtered products retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "description": "Product details",
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/fetch-viewed-products-by-ids": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Fetch products by viewed IDs",
                "description": "Fetches a list of products based on a comma-separated list of product IDs.",
                "operationId": "fetchViewedProductsByIds",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "Comma-separated list of product IDs",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "1,2,3"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Viewed products retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "description": "Product details",
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "ids": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The ids field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/reviews/store": {
            "post": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Submit a review for a product",
                "description": "Allows a user to submit a review for a product. If authenticated, the user's name will be used. Otherwise, name and contact information are required.",
                "operationId": "storeReview",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "product_id": {
                                        "description": "ID of the product being reviewed",
                                        "type": "integer",
                                        "example": 123
                                    },
                                    "review": {
                                        "description": "Review text",
                                        "type": "string",
                                        "example": "Great product!"
                                    },
                                    "rating": {
                                        "description": "Rating out of 5",
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "name": {
                                        "description": "Reviewer name (required for guest users)",
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "contact": {
                                        "description": "Reviewer contact info (email or phone, required for guest users)",
                                        "type": "string",
                                        "example": "johndoe@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Review submitted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Success message",
                                            "type": "string",
                                            "example": "Review submitted successfully, awaiting approval."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Validation error message",
                                            "type": "string",
                                            "example": "The review field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/reviews/{productId}": {
            "get": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Retrieve reviews for a product",
                "description": "Fetches all accepted reviews for a given product along with the review count and average rating.",
                "operationId": "getProductReviews",
                "parameters": [
                    {
                        "name": "productId",
                        "in": "path",
                        "description": "ID of the product to fetch reviews for",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 123
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of reviews retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "review_count": {
                                            "description": "Total number of reviews",
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "average_rating": {
                                            "description": "Average rating for the product",
                                            "type": "number",
                                            "format": "float",
                                            "example": 4.5
                                        },
                                        "reviews": {
                                            "description": "List of reviews",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "description": "Review ID",
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "product_id": {
                                                        "description": "ID of the reviewed product",
                                                        "type": "integer",
                                                        "example": 123
                                                    },
                                                    "name": {
                                                        "description": "Name of the reviewer",
                                                        "type": "string",
                                                        "example": "John Doe"
                                                    },
                                                    "rating": {
                                                        "description": "Rating out of 5",
                                                        "type": "integer",
                                                        "example": 5
                                                    },
                                                    "review": {
                                                        "description": "Review text",
                                                        "type": "string",
                                                        "example": "Great product!"
                                                    },
                                                    "status": {
                                                        "description": "Status of the review",
                                                        "type": "string",
                                                        "example": "accepted"
                                                    },
                                                    "created_at": {
                                                        "description": "Date and time the review was created",
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2024-01-01T10:00:00Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found or no reviews available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Product not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/search/autocomplete": {
            "get": {
                "tags": [
                    "Search"
                ],
                "summary": "Autocomplete product search",
                "description": "Provides up to 5 product suggestions based on a search term.",
                "operationId": "autocompleteSearch",
                "parameters": [
                    {
                        "name": "term",
                        "in": "query",
                        "description": "Search term to find products",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "chair"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Autocomplete suggestions retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "count": {
                                            "description": "Total count of matching products",
                                            "type": "integer",
                                            "example": 12
                                        },
                                        "items": {
                                            "description": "List of product suggestions",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "description": "Product ID",
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "description": "Product name",
                                                        "type": "string",
                                                        "example": "Wooden Chair"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Invalid request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/search/search-results": {
            "post": {
                "tags": [
                    "Search"
                ],
                "summary": "Get search results for products",
                "description": "Retrieves a list of products matching the search term.",
                "operationId": "searchResults",
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "term": {
                                        "description": "Search term to filter products",
                                        "type": "string",
                                        "example": "chair"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Search results retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "total_results": {
                                            "description": "Total number of matching products",
                                            "type": "integer",
                                            "example": 5
                                        },
                                        "products": {
                                            "description": "List of matching products",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "description": "Product ID",
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "description": "Product name",
                                                        "type": "string",
                                                        "example": "Wooden Chair"
                                                    },
                                                    "is_set": {
                                                        "description": "Indicates if the product is part of a set",
                                                        "type": "boolean",
                                                        "example": false
                                                    },
                                                    "price": {
                                                        "description": "Product price",
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 120.99
                                                    },
                                                    "discount": {
                                                        "description": "Discount amount",
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 10
                                                    },
                                                    "discount_ends_at": {
                                                        "description": "Discount end time",
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2024-12-31T23:59:59Z"
                                                    },
                                                    "final_price": {
                                                        "description": "Final price after discount",
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 110.99
                                                    },
                                                    "main_image": {
                                                        "description": "URL to the product's main image",
                                                        "type": "string",
                                                        "example": "https://example.com/images/products/chair.jpg"
                                                    },
                                                    "average_rating": {
                                                        "description": "Average product rating",
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 4.5
                                                    },
                                                    "is_in_basket": {
                                                        "description": "Indicates if the product is in the user's basket",
                                                        "type": "boolean",
                                                        "example": false
                                                    },
                                                    "is_favorite": {
                                                        "description": "Indicates if the product is marked as favorite",
                                                        "type": "boolean",
                                                        "example": true
                                                    },
                                                    "remaining_discount_seconds": {
                                                        "description": "Remaining time for the discount in seconds",
                                                        "type": "integer",
                                                        "example": 3600
                                                    },
                                                    "has_unlimited_discount": {
                                                        "description": "Indicates if the product has an unlimited discount",
                                                        "type": "boolean",
                                                        "example": false
                                                    },
                                                    "has_limited_discount": {
                                                        "description": "Indicates if the product has a limited-time discount",
                                                        "type": "boolean",
                                                        "example": true
                                                    },
                                                    "badge": {
                                                        "description": "URL to the first badge image",
                                                        "type": "string",
                                                        "example": "https://example.com/images/badges/new.png"
                                                    },
                                                    "badge2": {
                                                        "description": "URL to the second badge image",
                                                        "type": "string",
                                                        "example": "https://example.com/images/badges/sale.png"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Invalid request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/settings": {
            "get": {
                "tags": [
                    "Settings"
                ],
                "summary": "Retrieve application settings",
                "description": "Returns key application settings, such as whether bonuses are displayed in the app and the WhatsApp contact number.",
                "operationId": "getApplicationSettings",
                "responses": {
                    "200": {
                        "description": "Settings retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "show_bonus_in_app": {
                                            "description": "Indicates if bonuses are displayed in the app",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "whatsapp_number": {
                                            "description": "WhatsApp contact number",
                                            "type": "string",
                                            "example": "+123456789"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/phone_call_requests": {
            "post": {
                "tags": [
                    "Phone Call Requests"
                ],
                "summary": "Create a new phone call request",
                "description": "Allows the authenticated user to create a new phone call request. The request will be created with a default status of 'pending'.",
                "operationId": "createPhoneCallRequest",
                "requestBody": {
                    "description": "No additional fields are required for this request.",
                    "required": false
                },
                "responses": {
                    "201": {
                        "description": "Phone call request created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Operation status",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "description": "Success message",
                                            "type": "string",
                                            "example": "Phone call request created successfully."
                                        },
                                        "data": {
                                            "description": "Created phone call request details",
                                            "properties": {
                                                "id": {
                                                    "description": "Phone call request ID",
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "user_id": {
                                                    "description": "ID of the user who made the request",
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "status": {
                                                    "description": "Status of the request",
                                                    "type": "string",
                                                    "example": "pending"
                                                },
                                                "created_at": {
                                                    "description": "Timestamp when the request was created",
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": "2024-11-20T15:30:00Z"
                                                },
                                                "updated_at": {
                                                    "description": "Timestamp when the request was last updated",
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": "2024-11-20T15:30:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Operation status",
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "User not authenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/video_call_requests": {
            "post": {
                "tags": [
                    "Video Call Requests"
                ],
                "summary": "Create a new video call request",
                "description": "Submits a request for a video call, including name, WhatsApp number, subject, and address.",
                "operationId": "storeVideoCallRequest",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "whatsapp_number",
                                    "subject",
                                    "address"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Name of the requester",
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "whatsapp_number": {
                                        "description": "WhatsApp number of the requester",
                                        "type": "string",
                                        "example": "+1234567890"
                                    },
                                    "subject": {
                                        "description": "Subject of the video call request",
                                        "type": "string",
                                        "example": "Product Inquiry"
                                    },
                                    "address": {
                                        "description": "Address of the requester",
                                        "type": "string",
                                        "example": "123 Main Street, Springfield"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Video call request created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Success message",
                                            "type": "string",
                                            "example": "Video call request created successfully."
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "description": "ID of the video call request",
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "description": "Name of the requester",
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "whatsapp_number": {
                                                    "description": "WhatsApp number of the requester",
                                                    "type": "string",
                                                    "example": "+1234567890"
                                                },
                                                "subject": {
                                                    "description": "Subject of the request",
                                                    "type": "string",
                                                    "example": "Product Inquiry"
                                                },
                                                "address": {
                                                    "description": "Requester's address",
                                                    "type": "string",
                                                    "example": "123 Main Street, Springfield"
                                                },
                                                "status": {
                                                    "description": "Status of the request",
                                                    "type": "string",
                                                    "example": "pending"
                                                },
                                                "created_at": {
                                                    "description": "Time when the request was created",
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-11-20T10:15:30Z"
                                                },
                                                "updated_at": {
                                                    "description": "Time when the request was last updated",
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-11-20T10:15:30Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Validation error message",
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "property": null
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user/account": {
            "get": {
                "tags": [
                    "Account"
                ],
                "summary": "Retrieve account details for the authenticated user",
                "description": "Returns the account details of the authenticated user, including non-changeable and changeable fields.",
                "operationId": "getUserAccountDetails",
                "responses": {
                    "200": {
                        "description": "Account details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "name": {
                                            "description": "User's first name",
                                            "type": "string",
                                            "example": "John"
                                        },
                                        "surname": {
                                            "description": "User's last name",
                                            "type": "string",
                                            "example": "Doe",
                                            "nullable": true
                                        },
                                        "phone": {
                                            "description": "User's phone number (non-changeable)",
                                            "type": "string",
                                            "example": "+123456789"
                                        },
                                        "gender": {
                                            "description": "User's gender",
                                            "type": "string",
                                            "example": "male"
                                        },
                                        "birthdate": {
                                            "description": "User's birthdate in ISO 8601 format",
                                            "type": "string",
                                            "format": "date",
                                            "example": "1990-05-20T00:00:00Z",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Account"
                ],
                "summary": "Update account details for the authenticated user",
                "description": "Allows the authenticated user to update their account details. The phone number is non-changeable.",
                "operationId": "updateUserAccountDetails",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "User's first name",
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "surname": {
                                        "description": "User's last name",
                                        "type": "string",
                                        "example": "Doe",
                                        "nullable": true
                                    },
                                    "gender": {
                                        "description": "User's gender",
                                        "type": "string",
                                        "enum": [
                                            "male",
                                            "female",
                                            "other"
                                        ],
                                        "example": "male"
                                    },
                                    "birthdate": {
                                        "description": "User's birthdate in ISO 8601 format",
                                        "type": "string",
                                        "format": "date",
                                        "example": "1990-05-20T00:00:00Z"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User account updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Success message",
                                            "type": "string",
                                            "example": "User updated successfully"
                                        },
                                        "user": {
                                            "description": "Updated user account details",
                                            "properties": {
                                                "id": {
                                                    "description": "User ID",
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "description": "User's first name",
                                                    "type": "string",
                                                    "example": "John"
                                                },
                                                "surname": {
                                                    "description": "User's last name",
                                                    "type": "string",
                                                    "example": "Doe",
                                                    "nullable": true
                                                },
                                                "phone": {
                                                    "description": "User's phone number (non-changeable)",
                                                    "type": "string",
                                                    "example": "+123456789"
                                                },
                                                "gender": {
                                                    "description": "User's gender",
                                                    "type": "string",
                                                    "example": "male"
                                                },
                                                "birthdate": {
                                                    "description": "User's birthdate in ISO 8601 format",
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "1990-05-20T00:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Validation error message",
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "description": "Details of the validation errors",
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The name field is required."
                                                    }
                                                },
                                                "gender": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The selected gender is invalid."
                                                    }
                                                },
                                                "birthdate": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The birthdate must be a date before today."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/auth/authenticate": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Authenticate user via phone number",
                "description": "Handles user authentication by verifying the phone number. The phone number should follow the format (XX) XXX-XX-XX.",
                "operationId": "authenticateUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "phone": {
                                        "description": "User's phone number in the format (XX) XXX-XX-XX",
                                        "type": "string",
                                        "pattern": "\\(\\d{2}\\) \\d{3}-\\d{2}-\\d{2}",
                                        "example": "(33) 445-55-55"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful authentication or OTP required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Authentication status",
                                            "type": "string",
                                            "example": "otp_required"
                                        },
                                        "message": {
                                            "description": "Response message",
                                            "type": "string",
                                            "example": "OTP sent to your phone number"
                                        },
                                        "otp": {
                                            "description": "Generated OTP if applicable",
                                            "type": "string",
                                            "example": "1234",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Validation errors",
                                            "type": "object",
                                            "example": {
                                                "phone": [
                                                    "The phone field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/verify-otp": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify the OTP for phone number authentication",
                "description": "Verifies the OTP sent to the user's phone. If successful, marks the phone as verified and either prompts the user to log in or set a password.",
                "operationId": "verifyOtp",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "phone": {
                                        "description": "User's phone number in the format (XX) XXX-XX-XX",
                                        "type": "string",
                                        "maxLength": 15,
                                        "pattern": "\\(\\d{2}\\) \\d{3}-\\d{2}-\\d{2}",
                                        "example": "(33) 445-55-55"
                                    },
                                    "otp": {
                                        "description": "One-time password sent to the user's phone",
                                        "type": "string",
                                        "maxLength": 4,
                                        "example": "1234"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP successfully verified",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Authentication status",
                                            "type": "string",
                                            "example": "set_password"
                                        },
                                        "message": {
                                            "description": "Response message",
                                            "type": "string",
                                            "example": "OTP verified, set your password."
                                        },
                                        "temp_token": {
                                            "description": "Temporary token for password setup",
                                            "type": "string",
                                            "example": "abcd1234efgh5678ijkl91011mnop12",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid OTP",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Invalid OTP"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Validation errors",
                                            "type": "object",
                                            "example": {
                                                "phone": [
                                                    "The phone field is required."
                                                ],
                                                "otp": [
                                                    "The otp field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/set-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Set a new password for the authenticated user",
                "description": "Allows the user to set a new password. Requires the password confirmation and ensures the password meets the minimum length requirement.",
                "operationId": "setPassword",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "password": {
                                        "description": "New password (must be confirmed)",
                                        "type": "string",
                                        "example": "newpassword123"
                                    },
                                    "password_confirmation": {
                                        "description": "Password confirmation",
                                        "type": "string",
                                        "example": "newpassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Password set successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Response status",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "description": "Response message",
                                            "type": "string",
                                            "example": "Password set successfully."
                                        },
                                        "token": {
                                            "description": "Bearer token for authenticated access",
                                            "type": "string",
                                            "example": "abcd1234efgh5678ijkl91011mnop12"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Validation errors",
                                            "type": "object",
                                            "example": {
                                                "password": [
                                                    "The password field is required.",
                                                    "The password must be at least 6 characters."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Log in a user",
                "description": "Authenticates the user using their phone number and password. Returns an authentication token upon successful login.",
                "operationId": "loginUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "phone": {
                                        "description": "User's phone number",
                                        "type": "string",
                                        "maxLength": 15,
                                        "pattern": "\\(\\d{2}\\) \\d{3}-\\d{2}-\\d{2}",
                                        "example": "(33) 445-55-55"
                                    },
                                    "password": {
                                        "description": "User's password",
                                        "type": "string",
                                        "example": "userpassword"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Response status",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "description": "Response message",
                                            "type": "string",
                                            "example": "Login successful."
                                        },
                                        "token": {
                                            "description": "Bearer token for authenticated access",
                                            "type": "string",
                                            "example": "abcd1234efgh5678ijkl91011mnop12"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Invalid credentials"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Validation errors",
                                            "type": "object",
                                            "example": {
                                                "phone": [
                                                    "The phone field is required."
                                                ],
                                                "password": [
                                                    "The password field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Log out the authenticated user",
                "description": "Revokes the current access token for the authenticated user.",
                "operationId": "logoutUser",
                "responses": {
                    "200": {
                        "description": "Successfully logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Response status",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "description": "Response message",
                                            "type": "string",
                                            "example": "Successfully logged out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/auth/me": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Retrieve authenticated user details",
                "description": "Returns basic information about the currently authenticated user.",
                "operationId": "getAuthenticatedUser",
                "responses": {
                    "200": {
                        "description": "Authenticated user details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Response status",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "description": "User data",
                                            "properties": {
                                                "id": {
                                                    "description": "User ID",
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "description": "User's first name",
                                                    "type": "string",
                                                    "example": "John"
                                                },
                                                "surname": {
                                                    "description": "User's last name",
                                                    "type": "string",
                                                    "example": "Doe"
                                                },
                                                "phone": {
                                                    "description": "User's phone number",
                                                    "type": "string",
                                                    "example": "(33) 445-55-55"
                                                },
                                                "remaining_bonus_amount": {
                                                    "description": "User's remaining bonus amount",
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 150.5
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "Enter your token in the format: Bearer {token}",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    }
}